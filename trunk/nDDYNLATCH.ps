%!PS-Adobe-3.0
%%DocumentFonts: Helvetica Times-Roman Courier
%%Creator: Cadence Design Systems
%%EndComments
%%BeginProlog
%
% Start of Cadence ps.prologue -- Version 5.3.1
% Adobe Postscript Level 2 Color Version.
/setpacking where
{
	/currpack currentpacking def
	pop true setpacking
} if
%******************************************************************************
% Graphics initialization routine.
%
/gis  {
  0 setgray
  save
  mark
  newpath

%
% Scale postscripts 72 dpi divided by the plotter resolution set in pap.
%
  72 resolution div
  dup
  scale

%
% Move the origin of the plot up and to the right so the plotters margin
% is observed.
%
  offsetX offsetY translate

  /stippleArray 10 array def
    stippleArray
     dup    0  <FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
                FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF> put
     dup    1  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    2  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    3  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    4  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    5  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    6  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    7  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    8  <08080404020201018080404020201010
		08080404020201018080404020201010> put
            9  <08081414222241418080414122221414
                08081414222241418080414122221414> put

  /newFont 10 dict def
  newFont begin

    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
    /FontBBox [0 0 1 1] def

    /Encoding 256 array def
    0 1 255 {Encoding exch /.notdef put} for
    Encoding
      dup 48 /0  put
      dup 49 /1  put
      dup 50 /2  put
      dup 51 /3  put
      dup 52 /4  put
      dup 53 /5  put
      dup 54 /6  put
      dup 55 /7  put
      dup 56 /8  put
          57 /9  put


    /BuildChar {
        /char exch def
        /fontdict exch def
        /charname fontdict /Encoding get char get def

         1 0 setcharwidth

          16 16 true
          [16 0 0 -16 -.5 15.50]
           stippleArray char 48 sub 1 getinterval cvx
          imagemask
    } def

  end
  /StippleFont newFont definefont 66 scalefont setfont
  /fillChar 0 def

  /ellipsedict 8 dict def
  ellipsedict /mtrx matrix put

  /xformdict 8 dict def
  xformdict /xformmtrx matrix put

  /color     0 def

  /lineRed   0 def
  /lineGreen 0 def
  /lineBlue  0 def

  /fillRed   0 def
  /fillGreen 0 def
  /fillBlue  0 def

  /hatchSet  0 def

  /rht 0 def
  /rw 0 def
  /ils 1.0 def
  /textalign 1 def

} bind def

%******************************************************************************
% Paper call.  Sets resolution page height and page width.
%
/pap {
    /resolution exch def
    /pageHeight exch def
    /pageWidth exch def
    /offsetY exch def
    /offsetX exch def

  } bind def

%******************************************************************************
% Plot is done.
%
/gfs  {
    showpage
    cleartomark
    restore
  } bind def

%******************************************************************************
% Next Page sequence.
%
/nxp  {

    showpage
    newpath

%
% Scale postscripts 72 dpi divided by the plotter resolution set in pap.
%
    72 resolution div
    dup
    scale
%
% Move the origin of the plot up and to the right so the plotters margin
% is observed.
%
    offsetX offsetY translate
    /ils 1.0 def
    /textalign 1 def
  } bind def

%******************************************************************************
% Rotate Plot Sequence.
%
/rotp  {
  pageWidth 0  translate  %% This moves lower left of plot to
                          %% lower right of page.

  90 rotate    %% rotate plot 90 degs.
} bind def
%******************************************************************************
% Clipping Window
%
/clwin  {
    initclip
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    newpath
    x1 y1 moveto
    x2 y1 lineto
    x2 y2 lineto
    x1 y2 lineto
    closepath
    clip
} bind def
%******************************************************************************
% These to routines keep track of the bounding box of the shape.
% This information is used when filling the drawn shape.
%
/bblineto {
  dup dup
  /cury exch def
  miny lt {/miny exch def}
    {dup maxy gt { /maxy exch def }
           {pop } ifelse } ifelse
  dup dup
  minx lt {/minx exch def}
    {dup maxx gt { /maxx exch def }
           { pop } ifelse } ifelse
  cury lineto
} bind def

/bbmoveto {
  dup dup
  /miny exch def /maxy exch def /cury exch def
  dup dup
  /minx exch def /maxx exch def
  cury moveto
} bind def
%******************************************************************************
% Internal ellipical arc routine.
%    x y xradius yradius startangle endangle ellipse
%
/ellipse
  {
    /endangle exch def
    /startangle exch def
    /yrad exch def
    /xrad exch def
    /y exch def
    /x exch def

    startangle endangle gt {
      save
      /tmpangle startangle def
      /startangle endangle def
      /endangle tmpangle def
      restore
    } if

    ellipsedict begin
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
    end
  } bind def
%******************************************************************************
% Resident Font Scale Sequence
%    x y rfss
%
/rfss  {
    4 2 roll
    dup
    3 div
    add
    scalefont
    setfont
    0 color ne {setLineColor}
               { 0 setgray } ifelse
  } bind def
%******************************************************************************
% Resident Font End
%
%
/rfe
{
/width exch def
5 1 roll
moveto

xformdict begin
/savematrix xformmtrx currentmatrix def

exch 				% rotate mirror to mirror rotate
matrix rotate concat		% add rotation to current transform matrix
dup 1 eq
	{pop 1 -1}		% X mirror

	{2 eq
		{-1 1}		% Y mirror
		{1 1}		% No mirror
	ifelse}
ifelse matrix scale concat	% add mirror to current transform matrix


dup				% duplicate (string)
length				% replace one of the strings with its length
dup 0 ne
{
	3 -1 roll		% move fixed width flag to top of stack
	0 eq
	{			% if flag is false (0) do old string handling
		/numChr exch def
		dup stringwidth	%stack  wy,wx,(string)
		pop
		width
		exch sub	%stack  xdiff,ydiff,(string)

		cvi
		numChr idiv	%stack  xspace,ydiff,(string)

		/xoff exch def

		{		% this is the positioning  function for kshow
			pop pop
			xoff
			0
			rmoveto
		}

		exch
		kshow
	}

	{			% if flag is true (not 0) just show string
		pop show
	}
	ifelse
}

{
	pop pop pop
}
ifelse
      savematrix setmatrix
    end
  } bind def
%******************************************************************************
% Resident Font Text Alignment
%
/rfta {						% <align> rfta
	/textalign exch def
} bind def
%******************************************************************************
% Resident Font Interline Space
%
/rfis {						% <space> rfis
	/ils exch def
} bind def
%******************************************************************************
% Resident Font Scale
%
/rfsc {						% <ht> <rotate> <mirror> rfs
% What I need to do here is to validate <ht>.  <ht> can not be 0.  If it is 0
% then make it 1.  To do this I will need to use the roll operation and exch
% and maybe dup.  The algorithm looks like this:
% Roll stack to make it look like : <rotate> <mirror> <ht>
% duplicate <ht> so I can test it.
% If <ht> is equal to 0 then
% exchange 1 for <ht>
% In any case roll stack to make it look like: <ht> <rotate> <mirror>
% qed.
%
	3 -1 roll		% <rotate> <mirror> <ht>
	dup 0 eq
	{
		1 exch pop	% <rotate> <mirror> <ht=1>
	}
	if
	3 1 roll		% <ht> <rotate> <mirror>

	0 color ne
	{
		setLineColor
	}
	{
		0 setgray
	}
	ifelse

	/tasz 60 def
	/taln 59 def

	/ta tasz array def
	/cta ta def
	/tc 0 def
	/sa tasz array def
	/sc 0 def
} bind def
%******************************************************************************
% Resident Font Restricted Text
%
/rfrt {						% <height> <width> rfrt
	/rht exch def
	/rw exch def
	% Since restricting one dimension and not the other is not supported
	% if one dimension is turned off then ensure that both dimensions
	% are turned off (a value of 0 means no restriction)
	rht 0 eq rw 0 eq or
	{
		/rht 0 def
		/rw 0 def
	}
	if
} bind def
%******************************************************************************
% Resident Font Text Score
%
/rfts {						% <score> <start> <end> rfts
	sc tasz lt
	{
		3 -1 roll 3 array astore
		sa sc 3 -1 roll put
		/sc sc 1 add def
	}
	{
		pop pop pop
	} ifelse
} bind def
%******************************************************************************
% Resident Font Text
%
/rft {						% (text) rft
	tc taln gt tc tasz mod 0 eq and
	{
		cta /cta tasz array dup def put
	} if

	tc tasz mod exch cta 3 1 roll sc
	sa dup length array copy
	3 array astore put

	/sc 0 def
	/tc tc 1 add def
} bind def
%******************************************************************************
% Resident Font Complete
%
/rfc {						% <x> <y> rfc
	/cta ta def

	%
	% If text is restricted or if text alignment is not left, find the
	% longest text string
	%
	/mw 0 def
	rw 0 ne textalign 3 gt or
	{
		%
		% Find the widest text string
		%
		5 index		% <fn> <ht> <rot> <mir> <x> <y> <fn>
		setfont
		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			tasz mod cta exch get 0 get
			stringwidth pop dup mw gt
			{
				/mw exch def null
			}
			if

			pop
		}
		for

		/cta ta def
	}
	if

	%
	% Operand stack:		<fn> <ht> <rot> <mir> <x> <y>
	% Check for restricted text
	%
	rw 0 ne
	{

		%
		% Compute font scale factors
		%
		6 -2 roll pop		% <rot> <mir> <x> <y> <fn>
		rw mw div
		rht tc div dup ils mul 0.5 add cvi /tht exch def
		matrix scale makefont	% <rot> <mir> <x> <y> <fn>
		/mw rw def
	}
	{
		6 -2 roll		% <rot> <mir> <x> <y> <fn> <ht>
		dup 0 eq		% Test if height is 0
		{			% change to 1 if it is
                	1 exch pop	% <rot> <mir> <x> <y> <fn> <1>
		}
		if
		dup ils mul 0.5 add cvi /tht exch def
		dup mw mul /mw exch def scalefont
	}
	ifelse

	setfont				% <rot> <mir> <x> <y>

	moveto			% <rot> <mir>

	xformdict begin
		/savematrix xformmtrx currentmatrix def

		exch matrix rotate concat
		dup 1 eq
		{
			pop 1.0 -1.0		% x mirror
		}
		{
			2 eq
			{
				-1.0 1.0	% y mirror
			}
			{
				1.0 1.0		% no mirror
			}
			ifelse
		}
		ifelse
		matrix scale concat

		currentpoint

		%
		% Adjust origin for text alignment. For lc (4), cc (5), and uc
		% (6) move left by width / 2. For lr (7), cr (8), and ur (9)
		% move left by width. For cl (2), cc (5), and cr (8) move down
		% by height / 2. For ul (3), uc (6), and ur (9) move down by
		% height.
		%
		textalign 2 eq textalign 5 eq or textalign 8 eq or
		{
			tht tc mul 2 div sub
		} if
		textalign 3 eq textalign 6 eq or textalign 9 eq or
		{
			tht tc mul sub
		} if
		/oy exch def

		textalign 3 gt textalign 7 lt and
		{
			mw 2 div sub
		} if
		textalign 6 gt textalign 10 lt and
		{
			mw sub
		} if
		/ox exch def

		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			cta exch tasz mod get aload pop
			dup 3 -1 roll	% (str) [score] [score] <cnt>
			0 1 3 -1 roll 1 sub	% (str) [score] [score] 0 1 <cnt>
			{
				newpath ox oy moveto
				get aload pop pop exch	% ... <len> <start>
				dup 0 exch		% ... <len> <start> 0 <s
				5 index 3 1 roll	% ... (str) 0 <start>
				getinterval		% ... <len> <start> (.)
				stringwidth pop tht rmoveto
				3 index			% ... <len> <start> (str)
				3 1 roll exch		% ... (str) <start> <len>
%				dup 3 1 roll
%				sub
				getinterval stringwidth pop
				0 rlineto stroke
				dup
			}
			for
			pop pop
			ox oy moveto
			show

			%
			% Move origin for next line
			%
			/oy oy tht sub def
		}
		for

		savematrix setmatrix
	end
	pop					% throw away the "0"
} bind def
%******************************************************************************
% Draw line sequence.
%
/dls  {
  newpath
  moveto
  rlineto
  gsave
  0 color ne { setLineColor }
             { 0 setgray } ifelse
  stroke
  grestore
} bind def
%******************************************************************************
% Draw line to.
%
/dlt  {
  newpath
  gsave
  0 color ne { setLineColor }
             { 0 setgray } ifelse
  moveto
} bind def
%******************************************************************************
%
/dslt  {
  newpath
  gsave
  0 color ne { setLineColor }
             { 0 setgray } ifelse
  moveto
} bind def
%******************************************************************************
%
/dlv  {
  rlineto
} bind def
%******************************************************************************
%
/dle  {
  stroke
  grestore
} bind def
%******************************************************************************
% Move to.
/mps {
  newpath
  moveto
} bind def
%******************************************************************************
%
% Draw Box Unfilled
%    x1 y1 x2 y2 dbu
%
/dbu  {
    0 color ne { setLineColor } if
    newpath
    moveto
    dup 0 rlineto
    0 3 -1 roll
    rlineto
    neg 0 rlineto
    closepath
    stroke
  } bind def
%******************************************************************************
%
% Draw Box Filled
%    x1 y1 x2 y2 dbf
%
/dbf  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    newpath
    x1 y1 bbmoveto
    x2 y1 bblineto
    x2 y2 bblineto
    x1 y2 bblineto
    closepath
    gsave
    0 color ne { setFillColor } if
    clip fillpath grestore
  } bind def
%******************************************************************************
% Draw Box Solid
%    x1 y1 x2 y2 dsb
%
/dbs  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    newpath
    x1 y1 moveto
    x2 y1 lineto
    x2 y2 lineto
    x1 y2 lineto
    closepath
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse
    fill grestore
    0 color ne { setLineColor } if stroke
  } bind def

%******************************************************************************
% Draw Polygon Begin
%    x y dpb
%
/dpb  {
    newpath bbmoveto
  } bind def

%******************************************************************************
% Draw Polygon Unfilled
%    x y dpu
%
/dpu  {
      closepath
      gsave
      0 color ne { setLineColor } if
      stroke
      grestore
   } bind def

%******************************************************************************
% Draw Polygon Filled
%    x y dpf
%
/dpf  {
    closepath
    gsave
    0 color ne { setFillColor } if
    clip fillpath grestore
  } bind def

%******************************************************************************
% Draw Polygon Solid
%    x y dps
%
/dps  {
    closepath
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse
    fill grestore
    0 color ne { setLineColor } if stroke
  } bind def

%******************************************************************************
% Draw Polygon Vertex
%    x y dpv
%
/dpv  {
    bblineto
  } bind def

%******************************************************************************
% Draw Circle Unfilled
%    x y radius dcu
%
/dcu  {
    /radius exch def
    /y exch def
    /x exch def

    newpath
    x y radius radius 0 360 ellipse
    gsave
    0 color ne { setLineColor } if
    stroke
    grestore
  } bind def
%******************************************************************************
% Draw Circle Filled
%    x y radius dcs
%
/dcf  {
    /radius exch def
    /y exch def
    /x exch def
    /minx x radius sub def
    /miny y radius sub def
    /maxx x radius add def
    /maxy y radius add def

    newpath
    x y radius radius 0 360 ellipse
    gsave
    0 color ne { setFillColor } if
    clip fillpath
    grestore
  } bind def

%******************************************************************************
% Draw Circle Solid
%    x y radius dcs
%
/dcs  {
    /radius exch def
    /y exch def
    /x exch def

          newpath
    x y radius radius 0 360 ellipse
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse
    fill grestore
    0 color ne {setLineColor} if stroke
  } bind def
%******************************************************************************
% Draw Ellipse Unfilled
%    x y xradius yradius deu
%
/delu  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    newpath
    x y xradius yradius 0 360 ellipse
    gsave
    0 color ne { setLineColor } if
    stroke
    grestore
  } bind def
%******************************************************************************
% Draw Ellipse Filled
%    x y xradius yradius def
%
/delf  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def
    /minx x xradius sub def
    /miny y yradius sub def
    /maxx x xradius add def
    /maxy y yradius add def

    newpath
    x y xradius yradius 0 360 ellipse
    gsave
    0 color ne { setFillColor } if
    clip fillpath
    grestore
  } bind def

%******************************************************************************
% Draw Ellipse Solid
%    x y xradius yradius des
%
/dels  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    newpath
    x y xradius yradius 0 360 ellipse
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse

    fill grestore
    0 color ne {setLineColor} if stroke
  } bind def
%******************************************************************************
% Draw Arc Unfilled
%    x y xradius yradius startangle endangle das
%
/dau  { newpath ellipse
        gsave
        0 color ne { setLineColor } if
        stroke
        grestore
      } bind def
%******************************************************************************
% Line Define Code.
%
/setlinedash {
    1 index length 11 gt
    {exch dup length 11 sub 11 getinterval exch } if
    setdash
  } bind def

/lpb    {
    pop
    [
    /offset 0 def
    /offcount 0 def
    /oncount 0 def
  } bind def

/lpon  {
    /oncount exch def
    pop
    oncount
  } bind def

/lpoff  {
    /offcount exch def
    pop
    oncount 0 eq
    {/offset offcount def }
    { offcount } ifelse
  } bind def

/lpe  {
    /linewidth exch def
    pop
    offset 0 ne
    { offset } if ] 0 setlinedash
    linewidth dup 1 eq {pop 0} if setlinewidth
  } bind def

/sls    { pop } bind def

/ssls  { [] 0 setdash
          1 setlinewidth
        } bind def

%******************************************************************************
% Fill pattern define code.
%
/fillpath  {
    0 color ne { setFillColor } if
    /str 1 string def
    /minx minx 66 div
    truncate 66 mul def
    /miny miny 66 div
    truncate 66 mul def

          /fillLine maxx minx sub cvi 66 idiv 1 add string def

          0 1 fillLine length 1 sub {
            fillLine exch fillChar str cvs cvi 48 add put
          } for

          minx
          miny 66 maxy
            { exch dup 3 -1 roll moveto fillLine show
          } for pop

    hatchSet 1 eq {0 color ne { setLineColor } if stroke} if
} bind def


/fds  { pop /currchar 30 def} bind def
/fdf   {
    exch
    /char exch def
    /stipple stippleArray char get def
    stipple exch currchar
    exch putinterval
    stippleArray char stipple put
    /currchar currchar 2 sub def
  } bind def
/fde  {
    pop
  } bind def
/sfp  {
    /fillChar exch def
    /hatchSet 0 def
    fillChar 8 ge {/hatchSet 1 def} if
    /StippleFont findfont 66 scalefont setfont
  } bind def
/setLineColor {
  lineRed    1000 div
  lineGreen  1000 div
  lineBlue   1000 div
  setrgbcolor
} bind def

/setFillColor {
  fillRed    1000 div
  fillGreen  1000 div
  fillBlue   1000 div
  setrgbcolor
} bind def

/slc {
  /lineBlue  exch def
  /lineGreen exch def
  /lineRed   exch def
  /color 1 def
  lineBlue 1000 eq {lineGreen 1000 eq {lineRed 1000 eq {
    /lineBlue  0 def
    /lineGreen 0 def
    /lineRed   0 def
  } if} if} if
} bind def

/sfc {
  /fillBlue  exch def
  /fillGreen exch def
  /fillRed   exch def
  /color 1 def
  fillBlue 1000 eq {fillGreen 1000 eq {fillRed 1000 eq {
    /fillBlue  0 def
    /fillGreen 0 def
    /fillRed   0 def
  } if} if} if
} bind def
%******************************************************************************
%
% End of Cadence ps.prologue
%
%******************************************************************************
/setpacking where
{
	pop currpack setpacking
} if
%%EndProlog
/#copies 1 def
150 150 4600 6350 600 pap
%%Page: cds 1
gis
0 0 4251 1349 clwin
ssls
0 0 0 slc
0 0 0 sfc
71 1298 dlt
0 -58 dlv
2 -14 dlv
4 -10 dlv
10 -2 dlv
22 0 dlv
10 2 dlv
4 10 dlv
2 14 dlv
0 58 dlv
dle
149 1228 dlt
2 -8 dlv
6 -6 dlv
34 0 dlv
8 6 dlv
0 8 dlv
0 14 dlv
0 8 dlv
-8 6 dlv
-36 4 dlv
-4 6 dlv
-2 8 dlv
0 10 dlv
2 8 dlv
6 6 dlv
32 0 dlv
8 -6 dlv
2 -8 dlv
dle
273 1214 dlt
-48 0 dlv
0 84 dlv
48 0 dlv
dle
-46 0 271 1258 dls
297 1214 dlt
0 84 dlv
42 0 dlv
8 -6 dlv
0 -8 dlv
0 -20 dlv
0 -8 dlv
-8 -6 dlv
-42 0 dlv
dle
339 1250 dlt
8 -4 dlv
0 -10 dlv
0 -22 dlv
dle
377 1262 dlt
0 8 dlv
4 0 dlv
0 -8 dlv
-4 0 dlv
dle
377 1222 dlt
4 0 dlv
0 -8 dlv
-4 0 dlv
0 8 dlv
dle
0 60 423 1214 dls
423 1256 dlt
6 12 dlv
6 6 dlv
12 0 dlv
6 -6 dlv
4 -14 dlv
dle
0 60 481 1214 dls
481 1256 dlt
4 12 dlv
6 6 dlv
14 0 dlv
6 -6 dlv
4 -12 dlv
0 -42 dlv
dle
515 1256 dlt
4 12 dlv
6 6 dlv
14 0 dlv
6 -6 dlv
4 -12 dlv
0 -42 dlv
dle
573 1246 dlt
42 0 dlv
0 8 dlv
-2 14 dlv
-8 6 dlv
-22 0 dlv
-6 -6 dlv
-4 -14 dlv
0 -20 dlv
4 -14 dlv
6 -6 dlv
24 0 dlv
6 8 dlv
dle
0 60 639 1214 dls
639 1256 dlt
6 12 dlv
6 6 dlv
12 0 dlv
6 -6 dlv
4 -14 dlv
dle
38 0 697 1274 dls
707 1290 dlt
0 -64 dlv
4 -10 dlv
8 -2 dlv
6 0 dlv
8 2 dlv
4 10 dlv
0 10 dlv
dle
761 1246 dlt
42 0 dlv
0 8 dlv
-2 14 dlv
-8 6 dlv
-22 0 dlv
-6 -6 dlv
-4 -14 dlv
0 -20 dlv
4 -14 dlv
6 -6 dlv
24 0 dlv
6 8 dlv
dle
0 60 827 1214 dls
827 1256 dlt
4 12 dlv
6 6 dlv
20 0 dlv
8 -6 dlv
2 -12 dlv
0 -42 dlv
dle
893 1282 dlt
2 10 dlv
6 6 dlv
30 0 dlv
8 -6 dlv
2 -10 dlv
0 -12 dlv
-2 -10 dlv
-8 -6 dlv
-30 -6 dlv
-6 -6 dlv
-2 -10 dlv
-2 -18 dlv
50 0 dlv
dle
71 1079 dlt
0 84 dlv
40 0 dlv
10 -2 dlv
6 -8 dlv
2 -18 dlv
0 -28 dlv
-2 -16 dlv
-4 -10 dlv
-12 -2 dlv
-40 0 dlv
dle
153 1079 dlt
30 84 dlv
32 -84 dlv
dle
-44 0 205 1101 dls
50 0 239 1163 dls
0 -84 265 1163 dls
361 1079 dlt
-48 0 dlv
0 84 dlv
48 0 dlv
dle
-46 0 359 1123 dls
391 1127 dlt
0 8 dlv
4 0 dlv
0 -8 dlv
-4 0 dlv
dle
391 1087 dlt
4 0 dlv
0 -8 dlv
-4 0 dlv
0 8 dlv
dle
437 1093 dlt
2 -8 dlv
6 -6 dlv
34 0 dlv
8 6 dlv
0 8 dlv
0 14 dlv
0 8 dlv
-8 6 dlv
-36 4 dlv
-4 6 dlv
-2 8 dlv
0 10 dlv
2 8 dlv
6 6 dlv
32 0 dlv
8 -6 dlv
2 -8 dlv
dle
513 1139 dlt
0 -42 dlv
4 -12 dlv
6 -6 dlv
18 0 dlv
8 6 dlv
4 10 dlv
dle
0 -60 553 1139 dls
0 60 577 1079 dls
577 1121 dlt
4 12 dlv
6 6 dlv
20 0 dlv
8 -6 dlv
2 -12 dlv
0 -42 dlv
dle
659 1079 dlt
0 84 dlv
40 0 dlv
10 -2 dlv
6 -8 dlv
2 -18 dlv
0 -28 dlv
-2 -16 dlv
-4 -10 dlv
-12 -2 dlv
-40 0 dlv
dle
741 1111 dlt
42 0 dlv
0 8 dlv
-2 14 dlv
-8 6 dlv
-22 0 dlv
-6 -6 dlv
-4 -14 dlv
0 -20 dlv
4 -14 dlv
6 -6 dlv
24 0 dlv
6 8 dlv
dle
847 1121 dlt
-2 12 dlv
-8 6 dlv
-20 0 dlv
-6 -6 dlv
-4 -14 dlv
0 -20 dlv
4 -14 dlv
6 -6 dlv
20 0 dlv
8 6 dlv
2 10 dlv
dle
907 1093 dlt
2 -8 dlv
6 -6 dlv
34 0 dlv
8 6 dlv
0 12 dlv
0 22 dlv
0 10 dlv
-8 6 dlv
-32 0 dlv
-6 -6 dlv
-4 -8 dlv
0 42 dlv
50 0 dlv
dle
999 1133 dlt
24 30 dlv
0 -84 dlv
dle
1047 1093 dlt
2 -8 dlv
6 -6 dlv
34 0 dlv
8 6 dlv
0 12 dlv
0 22 dlv
0 10 dlv
-8 6 dlv
-32 0 dlv
-6 -6 dlv
-4 -8 dlv
0 42 dlv
50 0 dlv
dle
1127 1127 dlt
0 8 dlv
4 0 dlv
0 -8 dlv
-4 0 dlv
dle
1127 1087 dlt
4 0 dlv
0 -8 dlv
-4 0 dlv
0 8 dlv
dle
1155 1149 dlt
2 8 dlv
6 6 dlv
34 0 dlv
8 -6 dlv
0 -8 dlv
0 -10 dlv
0 -10 dlv
-8 -4 dlv
-24 0 dlv
dle
1197 1125 dlt
8 -6 dlv
0 -12 dlv
0 -12 dlv
0 -10 dlv
-8 -6 dlv
-34 0 dlv
-6 6 dlv
-2 10 dlv
dle
1229 1133 dlt
24 30 dlv
0 -84 dlv
dle
1283 1127 dlt
0 8 dlv
4 0 dlv
0 -8 dlv
-4 0 dlv
dle
1283 1087 dlt
4 0 dlv
0 -8 dlv
-4 0 dlv
0 8 dlv
dle
1311 1133 dlt
24 30 dlv
0 -84 dlv
dle
1359 1163 dlt
52 0 dlv
-38 -84 dlv
dle
1455 1147 dlt
2 10 dlv
6 6 dlv
30 0 dlv
8 -6 dlv
2 -10 dlv
0 -12 dlv
-2 -10 dlv
-8 -6 dlv
-30 -6 dlv
-6 -6 dlv
-2 -10 dlv
-2 -18 dlv
50 0 dlv
dle
1545 1079 dlt
-12 2 dlv
-4 10 dlv
-2 16 dlv
0 28 dlv
2 18 dlv
4 8 dlv
12 2 dlv
18 0 dlv
10 -2 dlv
4 -8 dlv
2 -18 dlv
0 -28 dlv
-2 -16 dlv
-4 -10 dlv
-10 -2 dlv
-20 0 dlv
dle
52 84 1527 1079 dls
1603 1133 dlt
24 30 dlv
0 -84 dlv
dle
1669 1079 dlt
-12 2 dlv
-4 10 dlv
-2 16 dlv
0 28 dlv
2 18 dlv
4 8 dlv
12 2 dlv
18 0 dlv
10 -2 dlv
4 -8 dlv
2 -18 dlv
0 -28 dlv
-2 -16 dlv
-4 -10 dlv
-10 -2 dlv
-20 0 dlv
dle
52 84 1651 1079 dls
71 944 dlt
0 84 dlv
42 0 dlv
8 -4 dlv
2 -10 dlv
0 -20 dlv
-2 -8 dlv
-8 -6 dlv
-42 0 dlv
dle
147 1028 dlt
0 -84 dlv
42 0 dlv
dle
231 944 dlt
-12 2 dlv
-4 10 dlv
-2 16 dlv
0 28 dlv
2 18 dlv
4 8 dlv
12 2 dlv
22 0 dlv
12 -2 dlv
6 -10 dlv
2 -16 dlv
0 -28 dlv
-2 -16 dlv
-6 -10 dlv
-12 -2 dlv
-22 0 dlv
dle
50 0 297 1028 dls
0 -84 323 1028 dls
389 958 dlt
2 -8 dlv
6 -6 dlv
34 0 dlv
8 6 dlv
0 8 dlv
0 14 dlv
0 8 dlv
-8 6 dlv
-36 4 dlv
-4 6 dlv
-2 8 dlv
0 10 dlv
2 8 dlv
6 6 dlv
32 0 dlv
8 -6 dlv
2 -8 dlv
dle
0 84 465 944 dls
491 1028 dlt
50 0 dlv
-52 -84 dlv
54 0 dlv
dle
615 944 dlt
-48 0 dlv
0 84 dlv
48 0 dlv
dle
-46 0 613 988 dls
645 992 dlt
0 8 dlv
4 0 dlv
0 -8 dlv
-4 0 dlv
dle
645 952 dlt
4 0 dlv
0 -8 dlv
-4 0 dlv
0 8 dlv
dle
691 1028 dlt
52 0 dlv
-38 -84 dlv
dle
777 944 dlt
-4 0 dlv
0 8 dlv
4 0 dlv
0 -8 dlv
dle
851 1012 dlt
0 10 dlv
-8 6 dlv
-34 0 dlv
-6 -6 dlv
-2 -10 dlv
0 -52 dlv
2 -10 dlv
6 -6 dlv
34 0 dlv
8 6 dlv
0 10 dlv
0 16 dlv
0 10 dlv
-8 6 dlv
-32 0 dlv
-6 -6 dlv
-4 -12 dlv
dle
875 1028 dlt
52 0 dlv
-38 -84 dlv
dle
40 60 969 944 dls
40 -60 971 1004 dls
1053 1028 dlt
52 0 dlv
-38 -84 dlv
dle
1139 944 dlt
-4 0 dlv
0 8 dlv
4 0 dlv
0 -8 dlv
dle
1203 990 dlt
10 -6 dlv
0 -8 dlv
0 -18 dlv
0 -8 dlv
-8 -6 dlv
-34 0 dlv
-6 6 dlv
-2 8 dlv
0 18 dlv
2 8 dlv
8 6 dlv
30 0 dlv
8 4 dlv
2 10 dlv
0 10 dlv
-2 8 dlv
-8 6 dlv
-30 0 dlv
-6 -6 dlv
-2 -8 dlv
0 -10 dlv
2 -8 dlv
6 -6 dlv
dle
1239 1012 dlt
2 10 dlv
6 6 dlv
30 0 dlv
8 -6 dlv
2 -10 dlv
0 -12 dlv
-2 -10 dlv
-8 -6 dlv
-30 -6 dlv
-6 -6 dlv
-2 -10 dlv
-2 -18 dlv
50 0 dlv
dle
0 84 1329 944 dls
0 60 1353 944 dls
1353 986 dlt
4 12 dlv
6 6 dlv
20 0 dlv
8 -6 dlv
2 -12 dlv
0 -42 dlv
dle
1457 986 dlt
-2 12 dlv
-8 6 dlv
-20 0 dlv
-6 -6 dlv
-4 -14 dlv
0 -20 dlv
4 -14 dlv
6 -6 dlv
20 0 dlv
8 6 dlv
2 10 dlv
dle
0 84 1481 944 dls
1481 986 dlt
4 12 dlv
6 6 dlv
18 0 dlv
8 -6 dlv
4 -12 dlv
0 -42 dlv
dle
1545 976 dlt
42 0 dlv
0 8 dlv
-2 14 dlv
-8 6 dlv
-22 0 dlv
-6 -6 dlv
-4 -14 dlv
0 -20 dlv
4 -14 dlv
6 -6 dlv
24 0 dlv
6 8 dlv
dle
1611 956 dlt
4 -10 dlv
6 -2 dlv
20 0 dlv
8 2 dlv
2 6 dlv
0 14 dlv
-2 6 dlv
-8 4 dlv
-20 0 dlv
-6 2 dlv
-4 6 dlv
0 10 dlv
4 6 dlv
6 4 dlv
20 0 dlv
8 -4 dlv
2 -8 dlv
dle
71 893 dlt
0 -84 dlv
42 0 dlv
dle
0 60 137 809 dls
0 8 137 885 dls
0 84 161 809 dls
161 851 dlt
4 12 dlv
6 6 dlv
22 0 dlv
8 -6 dlv
2 -14 dlv
0 -20 dlv
-2 -14 dlv
-8 -6 dlv
-22 0 dlv
-6 6 dlv
-4 10 dlv
dle
0 60 227 809 dls
227 851 dlt
6 12 dlv
6 6 dlv
12 0 dlv
6 -6 dlv
4 -14 dlv
dle
285 857 dlt
4 8 dlv
6 4 dlv
18 0 dlv
8 -4 dlv
4 -8 dlv
0 -48 dlv
dle
325 835 dlt
-4 4 dlv
-6 4 dlv
-22 0 dlv
-4 -4 dlv
-4 -4 dlv
0 -18 dlv
4 -6 dlv
4 -2 dlv
22 0 dlv
6 2 dlv
4 6 dlv
dle
0 60 349 809 dls
349 851 dlt
6 12 dlv
6 6 dlv
12 0 dlv
6 -6 dlv
4 -14 dlv
dle
407 869 dlt
20 -60 dlv
20 60 dlv
dle
427 809 dlt
-4 -12 dlv
-6 -8 dlv
-4 0 dlv
dle
477 857 dlt
0 8 dlv
4 0 dlv
0 -8 dlv
-4 0 dlv
dle
477 817 dlt
4 0 dlv
0 -8 dlv
-4 0 dlv
0 8 dlv
dle
0 80 541 789 dls
541 851 dlt
4 12 dlv
6 6 dlv
22 0 dlv
6 -6 dlv
4 -14 dlv
0 -20 dlv
-2 -14 dlv
-8 -6 dlv
-22 0 dlv
-6 6 dlv
-4 12 dlv
dle
0 60 607 809 dls
607 851 dlt
6 12 dlv
6 6 dlv
12 0 dlv
6 -6 dlv
4 -14 dlv
dle
675 809 dlt
-6 6 dlv
-4 14 dlv
0 22 dlv
4 12 dlv
6 6 dlv
22 0 dlv
8 -6 dlv
2 -14 dlv
0 -20 dlv
-2 -14 dlv
-8 -6 dlv
-22 0 dlv
dle
731 789 dlt
6 2 dlv
4 8 dlv
0 70 dlv
dle
0 8 741 885 dls
765 841 dlt
42 0 dlv
0 8 dlv
-2 14 dlv
-8 6 dlv
-22 0 dlv
-6 -6 dlv
-4 -14 dlv
0 -20 dlv
4 -14 dlv
6 -6 dlv
24 0 dlv
6 8 dlv
dle
871 851 dlt
-2 12 dlv
-8 6 dlv
-20 0 dlv
-6 -6 dlv
-4 -14 dlv
0 -20 dlv
4 -14 dlv
6 -6 dlv
20 0 dlv
8 6 dlv
2 10 dlv
dle
38 0 895 869 dls
905 885 dlt
0 -64 dlv
4 -10 dlv
8 -2 dlv
6 0 dlv
8 2 dlv
4 10 dlv
0 10 dlv
dle
127 736 dlt
-2 12 dlv
-4 8 dlv
-10 2 dlv
-24 0 dlv
-10 -2 dlv
-4 -10 dlv
-2 -16 dlv
0 -28 dlv
2 -18 dlv
4 -8 dlv
10 -2 dlv
24 0 dlv
10 2 dlv
4 10 dlv
2 10 dlv
dle
151 706 dlt
42 0 dlv
0 8 dlv
-2 14 dlv
-8 6 dlv
-22 0 dlv
-6 -6 dlv
-4 -14 dlv
0 -20 dlv
4 -14 dlv
6 -6 dlv
24 0 dlv
6 8 dlv
dle
0 84 217 674 dls
0 84 241 674 dls
271 722 dlt
0 8 dlv
4 0 dlv
0 -8 dlv
-4 0 dlv
dle
271 682 dlt
4 0 dlv
0 -8 dlv
-4 0 dlv
0 8 dlv
dle
0 60 551 674 dls
551 716 dlt
4 12 dlv
6 6 dlv
20 0 dlv
8 -6 dlv
2 -12 dlv
0 -42 dlv
dle
615 674 dlt
0 84 dlv
40 0 dlv
10 -2 dlv
6 -8 dlv
2 -18 dlv
0 -28 dlv
-2 -16 dlv
-4 -10 dlv
-12 -2 dlv
-40 0 dlv
dle
697 674 dlt
0 84 dlv
40 0 dlv
10 -2 dlv
6 -8 dlv
2 -18 dlv
0 -28 dlv
-2 -16 dlv
-4 -10 dlv
-12 -2 dlv
-40 0 dlv
dle
779 758 dlt
28 -48 dlv
30 48 dlv
dle
0 -36 807 710 dls
861 674 dlt
0 84 dlv
56 -84 dlv
0 84 dlv
dle
941 758 dlt
0 -84 dlv
42 0 dlv
dle
1007 674 dlt
30 84 dlv
32 -84 dlv
dle
-44 0 1059 696 dls
50 0 1093 758 dls
0 -84 1119 758 dls
1223 736 dlt
-2 12 dlv
-4 8 dlv
-10 2 dlv
-24 0 dlv
-10 -2 dlv
-4 -10 dlv
-2 -16 dlv
0 -28 dlv
2 -18 dlv
4 -8 dlv
10 -2 dlv
24 0 dlv
10 2 dlv
4 10 dlv
2 10 dlv
dle
0 84 1247 674 dls
54 0 1247 718 dls
0 -84 1301 758 dls
71 623 dlt
28 -84 dlv
30 84 dlv
dle
0 60 153 539 dls
0 8 153 615 dls
177 571 dlt
42 0 dlv
0 8 dlv
-2 14 dlv
-8 6 dlv
-22 0 dlv
-6 -6 dlv
-4 -14 dlv
0 -20 dlv
4 -14 dlv
6 -6 dlv
24 0 dlv
6 8 dlv
dle
243 599 dlt
16 -60 dlv
14 60 dlv
16 -60 dlv
16 60 dlv
dle
335 587 dlt
0 8 dlv
4 0 dlv
0 -8 dlv
-4 0 dlv
dle
335 547 dlt
4 0 dlv
0 -8 dlv
-4 0 dlv
0 8 dlv
dle
561 551 dlt
4 -10 dlv
6 -2 dlv
20 0 dlv
8 2 dlv
2 6 dlv
0 14 dlv
-2 6 dlv
-8 4 dlv
-20 0 dlv
-6 2 dlv
-4 6 dlv
0 10 dlv
4 6 dlv
6 4 dlv
20 0 dlv
8 -4 dlv
2 -8 dlv
dle
665 581 dlt
-2 12 dlv
-8 6 dlv
-20 0 dlv
-6 -6 dlv
-4 -14 dlv
0 -20 dlv
4 -14 dlv
6 -6 dlv
20 0 dlv
8 6 dlv
2 10 dlv
dle
0 84 689 539 dls
689 581 dlt
4 12 dlv
6 6 dlv
18 0 dlv
8 -6 dlv
4 -12 dlv
0 -42 dlv
dle
753 571 dlt
42 0 dlv
0 8 dlv
-2 14 dlv
-8 6 dlv
-22 0 dlv
-6 -6 dlv
-4 -14 dlv
0 -20 dlv
4 -14 dlv
6 -6 dlv
24 0 dlv
6 8 dlv
dle
0 60 819 539 dls
819 581 dlt
4 12 dlv
6 6 dlv
14 0 dlv
6 -6 dlv
4 -12 dlv
0 -42 dlv
dle
853 581 dlt
4 12 dlv
6 6 dlv
14 0 dlv
6 -6 dlv
4 -12 dlv
0 -42 dlv
dle
911 587 dlt
4 8 dlv
6 4 dlv
18 0 dlv
8 -4 dlv
4 -8 dlv
0 -48 dlv
dle
951 565 dlt
-4 4 dlv
-6 4 dlv
-22 0 dlv
-4 -4 dlv
-4 -4 dlv
0 -18 dlv
4 -6 dlv
4 -2 dlv
22 0 dlv
6 2 dlv
4 6 dlv
dle
38 0 975 599 dls
985 615 dlt
0 -64 dlv
4 -10 dlv
8 -2 dlv
6 0 dlv
8 2 dlv
4 10 dlv
0 10 dlv
dle
0 60 1039 539 dls
0 8 1039 615 dls
1103 581 dlt
-2 12 dlv
-8 6 dlv
-20 0 dlv
-6 -6 dlv
-4 -14 dlv
0 -20 dlv
4 -14 dlv
6 -6 dlv
20 0 dlv
8 6 dlv
2 10 dlv
dle
71 403 dlt
0 84 dlv
42 0 dlv
8 -4 dlv
2 -10 dlv
0 -20 dlv
-2 -8 dlv
-8 -6 dlv
-42 0 dlv
dle
0 84 147 403 dls
181 403 dlt
-6 6 dlv
-4 14 dlv
0 22 dlv
4 12 dlv
6 6 dlv
22 0 dlv
8 -6 dlv
2 -14 dlv
0 -20 dlv
-2 -14 dlv
-8 -6 dlv
-22 0 dlv
dle
38 0 237 463 dls
247 479 dlt
0 -64 dlv
4 -10 dlv
8 -2 dlv
6 0 dlv
8 2 dlv
4 10 dlv
0 10 dlv
dle
319 403 dlt
30 84 dlv
32 -84 dlv
dle
-44 0 371 425 dls
0 60 405 403 dls
405 445 dlt
6 12 dlv
6 6 dlv
12 0 dlv
6 -6 dlv
4 -14 dlv
dle
463 435 dlt
42 0 dlv
0 8 dlv
-2 14 dlv
-8 6 dlv
-22 0 dlv
-6 -6 dlv
-4 -14 dlv
0 -20 dlv
4 -14 dlv
6 -6 dlv
24 0 dlv
6 8 dlv
dle
529 451 dlt
4 8 dlv
6 4 dlv
18 0 dlv
8 -4 dlv
4 -8 dlv
0 -48 dlv
dle
569 429 dlt
-4 4 dlv
-6 4 dlv
-22 0 dlv
-4 -4 dlv
-4 -4 dlv
0 -18 dlv
4 -6 dlv
4 -2 dlv
22 0 dlv
6 2 dlv
4 6 dlv
dle
599 451 dlt
0 8 dlv
4 0 dlv
0 -8 dlv
-4 0 dlv
dle
599 411 dlt
4 0 dlv
0 -8 dlv
-4 0 dlv
0 8 dlv
dle
681 487 dlt
-12 -2 dlv
-4 -8 dlv
-2 -18 dlv
0 -28 dlv
2 -16 dlv
4 -10 dlv
12 -2 dlv
dle
723 487 dlt
-12 -2 dlv
-4 -8 dlv
-2 -18 dlv
0 -28 dlv
2 -16 dlv
4 -10 dlv
12 -2 dlv
dle
42 0 751 439 dls
821 457 dlt
24 30 dlv
0 -84 dlv
dle
879 403 dlt
-4 0 dlv
0 8 dlv
4 0 dlv
0 -8 dlv
dle
903 419 dlt
2 -10 dlv
6 -6 dlv
34 0 dlv
8 6 dlv
0 10 dlv
0 52 dlv
0 10 dlv
-8 6 dlv
-34 0 dlv
-6 -6 dlv
-2 -10 dlv
0 -14 dlv
2 -12 dlv
6 -6 dlv
32 0 dlv
8 6 dlv
2 12 dlv
dle
977 487 dlt
52 0 dlv
-38 -84 dlv
dle
1053 417 dlt
2 -8 dlv
6 -6 dlv
34 0 dlv
8 6 dlv
0 12 dlv
0 22 dlv
0 10 dlv
-8 6 dlv
-32 0 dlv
-6 -6 dlv
-4 -8 dlv
0 42 dlv
50 0 dlv
dle
42 0 1149 439 dls
1219 457 dlt
24 30 dlv
0 -84 dlv
dle
1277 403 dlt
-4 0 dlv
0 8 dlv
4 0 dlv
0 -8 dlv
dle
1303 471 dlt
2 10 dlv
6 6 dlv
30 0 dlv
8 -6 dlv
2 -10 dlv
0 -12 dlv
-2 -10 dlv
-8 -6 dlv
-30 -6 dlv
-6 -6 dlv
-2 -10 dlv
-2 -18 dlv
50 0 dlv
dle
1375 417 dlt
2 -8 dlv
6 -6 dlv
34 0 dlv
8 6 dlv
0 12 dlv
0 22 dlv
0 10 dlv
-8 6 dlv
-32 0 dlv
-6 -6 dlv
-4 -8 dlv
0 42 dlv
50 0 dlv
dle
1449 487 dlt
12 -2 dlv
4 -8 dlv
2 -18 dlv
0 -28 dlv
-2 -16 dlv
-4 -10 dlv
-12 -2 dlv
dle
1527 487 dlt
-12 -2 dlv
-4 -8 dlv
-2 -18 dlv
0 -28 dlv
2 -16 dlv
4 -10 dlv
12 -2 dlv
dle
1569 403 dlt
-12 2 dlv
-4 10 dlv
-2 16 dlv
0 28 dlv
2 18 dlv
4 8 dlv
12 2 dlv
18 0 dlv
10 -2 dlv
4 -8 dlv
2 -18 dlv
0 -28 dlv
-2 -16 dlv
-4 -10 dlv
-10 -2 dlv
-20 0 dlv
dle
52 84 1551 403 dls
1637 403 dlt
-4 0 dlv
0 8 dlv
4 0 dlv
0 -8 dlv
dle
1713 425 dlt
-52 0 dlv
46 62 dlv
0 -84 dlv
dle
1737 487 dlt
52 0 dlv
-38 -84 dlv
dle
1813 417 dlt
2 -8 dlv
6 -6 dlv
34 0 dlv
8 6 dlv
0 12 dlv
0 22 dlv
0 10 dlv
-8 6 dlv
-32 0 dlv
-6 -6 dlv
-4 -8 dlv
0 42 dlv
50 0 dlv
dle
1905 457 dlt
24 30 dlv
0 -84 dlv
dle
1963 403 dlt
-4 0 dlv
0 8 dlv
4 0 dlv
0 -8 dlv
dle
1989 471 dlt
2 10 dlv
6 6 dlv
30 0 dlv
8 -6 dlv
2 -10 dlv
0 -12 dlv
-2 -10 dlv
-8 -6 dlv
-30 -6 dlv
-6 -6 dlv
-2 -10 dlv
-2 -18 dlv
50 0 dlv
dle
2061 417 dlt
2 -8 dlv
6 -6 dlv
34 0 dlv
8 6 dlv
0 12 dlv
0 22 dlv
0 10 dlv
-8 6 dlv
-32 0 dlv
-6 -6 dlv
-4 -8 dlv
0 42 dlv
50 0 dlv
dle
2135 487 dlt
12 -2 dlv
4 -8 dlv
2 -18 dlv
0 -28 dlv
-2 -16 dlv
-4 -10 dlv
-12 -2 dlv
dle
2177 487 dlt
12 -2 dlv
4 -8 dlv
2 -18 dlv
0 -28 dlv
-2 -16 dlv
-4 -10 dlv
-12 -2 dlv
dle
1349 4251 0 0 dbu
%!PS-Adobe-3.0
%%DocumentFonts: Helvetica Times-Roman Courier
%%Creator: Cadence Design Systems
%%EndComments
%%BeginProlog
%
% Start of Cadence ps.prologue -- Version 5.3.1
% Adobe Postscript Level 2 Color Version.
/setpacking where
{
	/currpack currentpacking def
	pop true setpacking
} if
%******************************************************************************
% Graphics initialization routine.
%
/gis  {
  0 setgray
  save
  mark
  newpath

%
% Scale postscripts 72 dpi divided by the plotter resolution set in pap.
%
  72 resolution div
  dup
  scale

%
% Move the origin of the plot up and to the right so the plotters margin
% is observed.
%
  offsetX offsetY translate

  /stippleArray 10 array def
    stippleArray
     dup    0  <FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
                FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF> put
     dup    1  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    2  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    3  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    4  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    5  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    6  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    7  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    8  <08080404020201018080404020201010
		08080404020201018080404020201010> put
            9  <08081414222241418080414122221414
                08081414222241418080414122221414> put

  /newFont 10 dict def
  newFont begin

    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
    /FontBBox [0 0 1 1] def

    /Encoding 256 array def
    0 1 255 {Encoding exch /.notdef put} for
    Encoding
      dup 48 /0  put
      dup 49 /1  put
      dup 50 /2  put
      dup 51 /3  put
      dup 52 /4  put
      dup 53 /5  put
      dup 54 /6  put
      dup 55 /7  put
      dup 56 /8  put
          57 /9  put


    /BuildChar {
        /char exch def
        /fontdict exch def
        /charname fontdict /Encoding get char get def

         1 0 setcharwidth

          16 16 true
          [16 0 0 -16 -.5 15.50]
           stippleArray char 48 sub 1 getinterval cvx
          imagemask
    } def

  end
  /StippleFont newFont definefont 66 scalefont setfont
  /fillChar 0 def

  /ellipsedict 8 dict def
  ellipsedict /mtrx matrix put

  /xformdict 8 dict def
  xformdict /xformmtrx matrix put

  /color     0 def

  /lineRed   0 def
  /lineGreen 0 def
  /lineBlue  0 def

  /fillRed   0 def
  /fillGreen 0 def
  /fillBlue  0 def

  /hatchSet  0 def

  /rht 0 def
  /rw 0 def
  /ils 1.0 def
  /textalign 1 def

} bind def

%******************************************************************************
% Paper call.  Sets resolution page height and page width.
%
/pap {
    /resolution exch def
    /pageHeight exch def
    /pageWidth exch def
    /offsetY exch def
    /offsetX exch def

  } bind def

%******************************************************************************
% Plot is done.
%
/gfs  {
    showpage
    cleartomark
    restore
  } bind def

%******************************************************************************
% Next Page sequence.
%
/nxp  {

    showpage
    newpath

%
% Scale postscripts 72 dpi divided by the plotter resolution set in pap.
%
    72 resolution div
    dup
    scale
%
% Move the origin of the plot up and to the right so the plotters margin
% is observed.
%
    offsetX offsetY translate
    /ils 1.0 def
    /textalign 1 def
  } bind def

%******************************************************************************
% Rotate Plot Sequence.
%
/rotp  {
  pageWidth 0  translate  %% This moves lower left of plot to
                          %% lower right of page.

  90 rotate    %% rotate plot 90 degs.
} bind def
%******************************************************************************
% Clipping Window
%
/clwin  {
    initclip
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    newpath
    x1 y1 moveto
    x2 y1 lineto
    x2 y2 lineto
    x1 y2 lineto
    closepath
    clip
} bind def
%******************************************************************************
% These to routines keep track of the bounding box of the shape.
% This information is used when filling the drawn shape.
%
/bblineto {
  dup dup
  /cury exch def
  miny lt {/miny exch def}
    {dup maxy gt { /maxy exch def }
           {pop } ifelse } ifelse
  dup dup
  minx lt {/minx exch def}
    {dup maxx gt { /maxx exch def }
           { pop } ifelse } ifelse
  cury lineto
} bind def

/bbmoveto {
  dup dup
  /miny exch def /maxy exch def /cury exch def
  dup dup
  /minx exch def /maxx exch def
  cury moveto
} bind def
%******************************************************************************
% Internal ellipical arc routine.
%    x y xradius yradius startangle endangle ellipse
%
/ellipse
  {
    /endangle exch def
    /startangle exch def
    /yrad exch def
    /xrad exch def
    /y exch def
    /x exch def

    startangle endangle gt {
      save
      /tmpangle startangle def
      /startangle endangle def
      /endangle tmpangle def
      restore
    } if

    ellipsedict begin
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
    end
  } bind def
%******************************************************************************
% Resident Font Scale Sequence
%    x y rfss
%
/rfss  {
    4 2 roll
    dup
    3 div
    add
    scalefont
    setfont
    0 color ne {setLineColor}
               { 0 setgray } ifelse
  } bind def
%******************************************************************************
% Resident Font End
%
%
/rfe
{
/width exch def
5 1 roll
moveto

xformdict begin
/savematrix xformmtrx currentmatrix def

exch 				% rotate mirror to mirror rotate
matrix rotate concat		% add rotation to current transform matrix
dup 1 eq
	{pop 1 -1}		% X mirror

	{2 eq
		{-1 1}		% Y mirror
		{1 1}		% No mirror
	ifelse}
ifelse matrix scale concat	% add mirror to current transform matrix


dup				% duplicate (string)
length				% replace one of the strings with its length
dup 0 ne
{
	3 -1 roll		% move fixed width flag to top of stack
	0 eq
	{			% if flag is false (0) do old string handling
		/numChr exch def
		dup stringwidth	%stack  wy,wx,(string)
		pop
		width
		exch sub	%stack  xdiff,ydiff,(string)

		cvi
		numChr idiv	%stack  xspace,ydiff,(string)

		/xoff exch def

		{		% this is the positioning  function for kshow
			pop pop
			xoff
			0
			rmoveto
		}

		exch
		kshow
	}

	{			% if flag is true (not 0) just show string
		pop show
	}
	ifelse
}

{
	pop pop pop
}
ifelse
      savematrix setmatrix
    end
  } bind def
%******************************************************************************
% Resident Font Text Alignment
%
/rfta {						% <align> rfta
	/textalign exch def
} bind def
%******************************************************************************
% Resident Font Interline Space
%
/rfis {						% <space> rfis
	/ils exch def
} bind def
%******************************************************************************
% Resident Font Scale
%
/rfsc {						% <ht> <rotate> <mirror> rfs
% What I need to do here is to validate <ht>.  <ht> can not be 0.  If it is 0
% then make it 1.  To do this I will need to use the roll operation and exch
% and maybe dup.  The algorithm looks like this:
% Roll stack to make it look like : <rotate> <mirror> <ht>
% duplicate <ht> so I can test it.
% If <ht> is equal to 0 then
% exchange 1 for <ht>
% In any case roll stack to make it look like: <ht> <rotate> <mirror>
% qed.
%
	3 -1 roll		% <rotate> <mirror> <ht>
	dup 0 eq
	{
		1 exch pop	% <rotate> <mirror> <ht=1>
	}
	if
	3 1 roll		% <ht> <rotate> <mirror>

	0 color ne
	{
		setLineColor
	}
	{
		0 setgray
	}
	ifelse

	/tasz 60 def
	/taln 59 def

	/ta tasz array def
	/cta ta def
	/tc 0 def
	/sa tasz array def
	/sc 0 def
} bind def
%******************************************************************************
% Resident Font Restricted Text
%
/rfrt {						% <height> <width> rfrt
	/rht exch def
	/rw exch def
	% Since restricting one dimension and not the other is not supported
	% if one dimension is turned off then ensure that both dimensions
	% are turned off (a value of 0 means no restriction)
	rht 0 eq rw 0 eq or
	{
		/rht 0 def
		/rw 0 def
	}
	if
} bind def
%******************************************************************************
% Resident Font Text Score
%
/rfts {						% <score> <start> <end> rfts
	sc tasz lt
	{
		3 -1 roll 3 array astore
		sa sc 3 -1 roll put
		/sc sc 1 add def
	}
	{
		pop pop pop
	} ifelse
} bind def
%******************************************************************************
% Resident Font Text
%
/rft {						% (text) rft
	tc taln gt tc tasz mod 0 eq and
	{
		cta /cta tasz array dup def put
	} if

	tc tasz mod exch cta 3 1 roll sc
	sa dup length array copy
	3 array astore put

	/sc 0 def
	/tc tc 1 add def
} bind def
%******************************************************************************
% Resident Font Complete
%
/rfc {						% <x> <y> rfc
	/cta ta def

	%
	% If text is restricted or if text alignment is not left, find the
	% longest text string
	%
	/mw 0 def
	rw 0 ne textalign 3 gt or
	{
		%
		% Find the widest text string
		%
		5 index		% <fn> <ht> <rot> <mir> <x> <y> <fn>
		setfont
		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			tasz mod cta exch get 0 get
			stringwidth pop dup mw gt
			{
				/mw exch def null
			}
			if

			pop
		}
		for

		/cta ta def
	}
	if

	%
	% Operand stack:		<fn> <ht> <rot> <mir> <x> <y>
	% Check for restricted text
	%
	rw 0 ne
	{

		%
		% Compute font scale factors
		%
		6 -2 roll pop		% <rot> <mir> <x> <y> <fn>
		rw mw div
		rht tc div dup ils mul 0.5 add cvi /tht exch def
		matrix scale makefont	% <rot> <mir> <x> <y> <fn>
		/mw rw def
	}
	{
		6 -2 roll		% <rot> <mir> <x> <y> <fn> <ht>
		dup 0 eq		% Test if height is 0
		{			% change to 1 if it is
                	1 exch pop	% <rot> <mir> <x> <y> <fn> <1>
		}
		if
		dup ils mul 0.5 add cvi /tht exch def
		dup mw mul /mw exch def scalefont
	}
	ifelse

	setfont				% <rot> <mir> <x> <y>

	moveto			% <rot> <mir>

	xformdict begin
		/savematrix xformmtrx currentmatrix def

		exch matrix rotate concat
		dup 1 eq
		{
			pop 1.0 -1.0		% x mirror
		}
		{
			2 eq
			{
				-1.0 1.0	% y mirror
			}
			{
				1.0 1.0		% no mirror
			}
			ifelse
		}
		ifelse
		matrix scale concat

		currentpoint

		%
		% Adjust origin for text alignment. For lc (4), cc (5), and uc
		% (6) move left by width / 2. For lr (7), cr (8), and ur (9)
		% move left by width. For cl (2), cc (5), and cr (8) move down
		% by height / 2. For ul (3), uc (6), and ur (9) move down by
		% height.
		%
		textalign 2 eq textalign 5 eq or textalign 8 eq or
		{
			tht tc mul 2 div sub
		} if
		textalign 3 eq textalign 6 eq or textalign 9 eq or
		{
			tht tc mul sub
		} if
		/oy exch def

		textalign 3 gt textalign 7 lt and
		{
			mw 2 div sub
		} if
		textalign 6 gt textalign 10 lt and
		{
			mw sub
		} if
		/ox exch def

		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			cta exch tasz mod get aload pop
			dup 3 -1 roll	% (str) [score] [score] <cnt>
			0 1 3 -1 roll 1 sub	% (str) [score] [score] 0 1 <cnt>
			{
				newpath ox oy moveto
				get aload pop pop exch	% ... <len> <start>
				dup 0 exch		% ... <len> <start> 0 <s
				5 index 3 1 roll	% ... (str) 0 <start>
				getinterval		% ... <len> <start> (.)
				stringwidth pop tht rmoveto
				3 index			% ... <len> <start> (str)
				3 1 roll exch		% ... (str) <start> <len>
%				dup 3 1 roll
%				sub
				getinterval stringwidth pop
				0 rlineto stroke
				dup
			}
			for
			pop pop
			ox oy moveto
			show

			%
			% Move origin for next line
			%
			/oy oy tht sub def
		}
		for

		savematrix setmatrix
	end
	pop					% throw away the "0"
} bind def
%******************************************************************************
% Draw line sequence.
%
/dls  {
  newpath
  moveto
  rlineto
  gsave
  0 color ne { setLineColor }
             { 0 setgray } ifelse
  stroke
  grestore
} bind def
%******************************************************************************
% Draw line to.
%
/dlt  {
  newpath
  gsave
  0 color ne { setLineColor }
             { 0 setgray } ifelse
  moveto
} bind def
%******************************************************************************
%
/dslt  {
  newpath
  gsave
  0 color ne { setLineColor }
             { 0 setgray } ifelse
  moveto
} bind def
%******************************************************************************
%
/dlv  {
  rlineto
} bind def
%******************************************************************************
%
/dle  {
  stroke
  grestore
} bind def
%******************************************************************************
% Move to.
/mps {
  newpath
  moveto
} bind def
%******************************************************************************
%
% Draw Box Unfilled
%    x1 y1 x2 y2 dbu
%
/dbu  {
    0 color ne { setLineColor } if
    newpath
    moveto
    dup 0 rlineto
    0 3 -1 roll
    rlineto
    neg 0 rlineto
    closepath
    stroke
  } bind def
%******************************************************************************
%
% Draw Box Filled
%    x1 y1 x2 y2 dbf
%
/dbf  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    newpath
    x1 y1 bbmoveto
    x2 y1 bblineto
    x2 y2 bblineto
    x1 y2 bblineto
    closepath
    gsave
    0 color ne { setFillColor } if
    clip fillpath grestore
  } bind def
%******************************************************************************
% Draw Box Solid
%    x1 y1 x2 y2 dsb
%
/dbs  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    newpath
    x1 y1 moveto
    x2 y1 lineto
    x2 y2 lineto
    x1 y2 lineto
    closepath
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse
    fill grestore
    0 color ne { setLineColor } if stroke
  } bind def

%******************************************************************************
% Draw Polygon Begin
%    x y dpb
%
/dpb  {
    newpath bbmoveto
  } bind def

%******************************************************************************
% Draw Polygon Unfilled
%    x y dpu
%
/dpu  {
      closepath
      gsave
      0 color ne { setLineColor } if
      stroke
      grestore
   } bind def

%******************************************************************************
% Draw Polygon Filled
%    x y dpf
%
/dpf  {
    closepath
    gsave
    0 color ne { setFillColor } if
    clip fillpath grestore
  } bind def

%******************************************************************************
% Draw Polygon Solid
%    x y dps
%
/dps  {
    closepath
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse
    fill grestore
    0 color ne { setLineColor } if stroke
  } bind def

%******************************************************************************
% Draw Polygon Vertex
%    x y dpv
%
/dpv  {
    bblineto
  } bind def

%******************************************************************************
% Draw Circle Unfilled
%    x y radius dcu
%
/dcu  {
    /radius exch def
    /y exch def
    /x exch def

    newpath
    x y radius radius 0 360 ellipse
    gsave
    0 color ne { setLineColor } if
    stroke
    grestore
  } bind def
%******************************************************************************
% Draw Circle Filled
%    x y radius dcs
%
/dcf  {
    /radius exch def
    /y exch def
    /x exch def
    /minx x radius sub def
    /miny y radius sub def
    /maxx x radius add def
    /maxy y radius add def

    newpath
    x y radius radius 0 360 ellipse
    gsave
    0 color ne { setFillColor } if
    clip fillpath
    grestore
  } bind def

%******************************************************************************
% Draw Circle Solid
%    x y radius dcs
%
/dcs  {
    /radius exch def
    /y exch def
    /x exch def

          newpath
    x y radius radius 0 360 ellipse
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse
    fill grestore
    0 color ne {setLineColor} if stroke
  } bind def
%******************************************************************************
% Draw Ellipse Unfilled
%    x y xradius yradius deu
%
/delu  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    newpath
    x y xradius yradius 0 360 ellipse
    gsave
    0 color ne { setLineColor } if
    stroke
    grestore
  } bind def
%******************************************************************************
% Draw Ellipse Filled
%    x y xradius yradius def
%
/delf  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def
    /minx x xradius sub def
    /miny y yradius sub def
    /maxx x xradius add def
    /maxy y yradius add def

    newpath
    x y xradius yradius 0 360 ellipse
    gsave
    0 color ne { setFillColor } if
    clip fillpath
    grestore
  } bind def

%******************************************************************************
% Draw Ellipse Solid
%    x y xradius yradius des
%
/dels  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    newpath
    x y xradius yradius 0 360 ellipse
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse

    fill grestore
    0 color ne {setLineColor} if stroke
  } bind def
%******************************************************************************
% Draw Arc Unfilled
%    x y xradius yradius startangle endangle das
%
/dau  { newpath ellipse
        gsave
        0 color ne { setLineColor } if
        stroke
        grestore
      } bind def
%******************************************************************************
% Line Define Code.
%
/setlinedash {
    1 index length 11 gt
    {exch dup length 11 sub 11 getinterval exch } if
    setdash
  } bind def

/lpb    {
    pop
    [
    /offset 0 def
    /offcount 0 def
    /oncount 0 def
  } bind def

/lpon  {
    /oncount exch def
    pop
    oncount
  } bind def

/lpoff  {
    /offcount exch def
    pop
    oncount 0 eq
    {/offset offcount def }
    { offcount } ifelse
  } bind def

/lpe  {
    /linewidth exch def
    pop
    offset 0 ne
    { offset } if ] 0 setlinedash
    linewidth dup 1 eq {pop 0} if setlinewidth
  } bind def

/sls    { pop } bind def

/ssls  { [] 0 setdash
          1 setlinewidth
        } bind def

%******************************************************************************
% Fill pattern define code.
%
/fillpath  {
    0 color ne { setFillColor } if
    /str 1 string def
    /minx minx 66 div
    truncate 66 mul def
    /miny miny 66 div
    truncate 66 mul def

          /fillLine maxx minx sub cvi 66 idiv 1 add string def

          0 1 fillLine length 1 sub {
            fillLine exch fillChar str cvs cvi 48 add put
          } for

          minx
          miny 66 maxy
            { exch dup 3 -1 roll moveto fillLine show
          } for pop

    hatchSet 1 eq {0 color ne { setLineColor } if stroke} if
} bind def


/fds  { pop /currchar 30 def} bind def
/fdf   {
    exch
    /char exch def
    /stipple stippleArray char get def
    stipple exch currchar
    exch putinterval
    stippleArray char stipple put
    /currchar currchar 2 sub def
  } bind def
/fde  {
    pop
  } bind def
/sfp  {
    /fillChar exch def
    /hatchSet 0 def
    fillChar 8 ge {/hatchSet 1 def} if
    /StippleFont findfont 66 scalefont setfont
  } bind def
/setLineColor {
  lineRed    1000 div
  lineGreen  1000 div
  lineBlue   1000 div
  setrgbcolor
} bind def

/setFillColor {
  fillRed    1000 div
  fillGreen  1000 div
  fillBlue   1000 div
  setrgbcolor
} bind def

/slc {
  /lineBlue  exch def
  /lineGreen exch def
  /lineRed   exch def
  /color 1 def
  lineBlue 1000 eq {lineGreen 1000 eq {lineRed 1000 eq {
    /lineBlue  0 def
    /lineGreen 0 def
    /lineRed   0 def
  } if} if} if
} bind def

/sfc {
  /fillBlue  exch def
  /fillGreen exch def
  /fillRed   exch def
  /color 1 def
  fillBlue 1000 eq {fillGreen 1000 eq {fillRed 1000 eq {
    /fillBlue  0 def
    /fillGreen 0 def
    /fillRed   0 def
  } if} if} if
} bind def
%******************************************************************************
%
% End of Cadence ps.prologue
%
%******************************************************************************
/setpacking where
{
	pop currpack setpacking
} if
%%EndProlog
/#copies 1 def
150 150 4600 6350 600 pap
nxp
%%Page: cds 1
0 828 4599 5512 clwin
0 828 4599 5521 clwin
0 828 4599 5521 clwin
ssls
1000 502 0 slc
1000 502 0 sfc
2973 4524 dlt
0 -57 dlv
4 -10 dlv
6 -3 dlv
7 0 dlv
dle
24 0 2963 4500 dls
3044 4490 dlt
-4 7 dlv
-10 3 dlv
-10 0 dlv
-10 -3 dlv
-3 -7 dlv
3 -6 dlv
7 -4 dlv
17 -3 dlv
6 -3 dlv
4 -7 dlv
0 -3 dlv
-4 -7 dlv
-10 -3 dlv
-10 0 dlv
-10 3 dlv
-3 7 dlv
dle
0 -46 3067 4500 dls
3067 4487 dlt
10 10 dlv
7 3 dlv
10 0 dlv
7 -3 dlv
3 -10 dlv
0 -33 dlv
dle
3104 4487 dlt
10 10 dlv
7 3 dlv
10 0 dlv
7 -3 dlv
3 -10 dlv
0 -33 dlv
dle
3205 4490 dlt
-7 7 dlv
-7 3 dlv
-10 0 dlv
-6 -3 dlv
-7 -7 dlv
-3 -10 dlv
0 -6 dlv
3 -10 dlv
7 -7 dlv
6 -3 dlv
10 0 dlv
7 3 dlv
7 7 dlv
dle
3228 4507 dlt
0 4 dlv
4 6 dlv
3 4 dlv
7 3 dlv
13 0 dlv
7 -3 dlv
3 -4 dlv
3 -6 dlv
0 -7 dlv
-3 -7 dlv
-7 -10 dlv
-33 -33 dlv
47 0 dlv
dle
3332 4524 dlt
-33 0 dlv
-4 -30 dlv
4 3 dlv
10 3 dlv
10 0 dlv
10 -3 dlv
7 -7 dlv
3 -10 dlv
0 -6 dlv
-3 -10 dlv
-7 -7 dlv
-10 -3 dlv
-10 0 dlv
-10 3 dlv
-4 3 dlv
-3 7 dlv
dle
0 -70 3399 4524 dls
3399 4490 dlt
-6 7 dlv
-7 3 dlv
-10 0 dlv
-7 -3 dlv
-7 -7 dlv
-3 -10 dlv
0 -6 dlv
3 -10 dlv
7 -7 dlv
7 -3 dlv
10 0 dlv
7 3 dlv
6 7 dlv
dle
3426 4454 dlt
0 70 dlv
30 0 dlv
10 -3 dlv
4 -4 dlv
3 -6 dlv
0 -11 dlv
-3 -6 dlv
-4 -4 dlv
-10 -3 dlv
-30 0 dlv
dle
0 -63 2975 4094 dls
2975 4076 dlt
13 13 dlv
9 5 dlv
13 0 dlv
9 -5 dlv
5 -13 dlv
0 -45 dlv
dle
3024 4076 dlt
13 13 dlv
9 5 dlv
13 0 dlv
9 -5 dlv
5 -13 dlv
0 -45 dlv
dle
3113 4094 dlt
-4 -5 dlv
4 -4 dlv
5 4 dlv
-5 5 dlv
dle
3113 4040 dlt
-4 -4 dlv
4 -5 dlv
5 5 dlv
-5 4 dlv
dle
3162 4107 dlt
9 5 dlv
14 13 dlv
0 -94 dlv
dle
0 -94 2975 4266 dls
81 0 3010 4226 dls
81 0 3010 4199 dls
3127 4243 dlt
0 5 dlv
4 9 dlv
4 4 dlv
9 5 dlv
18 0 dlv
9 -5 dlv
5 -4 dlv
4 -9 dlv
0 -9 dlv
-4 -9 dlv
-9 -13 dlv
-45 -45 dlv
63 0 dlv
dle
3279 4203 dlt
-68 0 dlv
45 63 dlv
0 -94 dlv
dle
3328 4266 dlt
-14 -5 dlv
-9 -13 dlv
-4 -22 dlv
0 -14 dlv
4 -22 dlv
9 -14 dlv
14 -4 dlv
9 0 dlv
13 4 dlv
9 14 dlv
4 22 dlv
0 14 dlv
-4 22 dlv
-9 13 dlv
-13 5 dlv
-9 0 dlv
dle
-62 -94 3363 4266 dls
3399 4181 dlt
-4 -5 dlv
4 -4 dlv
5 4 dlv
-5 5 dlv
dle
3462 4266 dlt
-14 -5 dlv
-9 -13 dlv
-4 -22 dlv
0 -14 dlv
4 -22 dlv
9 -14 dlv
14 -4 dlv
9 0 dlv
13 4 dlv
9 14 dlv
5 22 dlv
0 14 dlv
-5 22 dlv
-9 13 dlv
-13 5 dlv
-9 0 dlv
dle
-63 -94 3498 4266 dls
0 -62 3529 4234 dls
3529 4217 dlt
13 13 dlv
9 4 dlv
14 0 dlv
9 -4 dlv
4 -13 dlv
0 -45 dlv
dle
2970 4375 dlt
18 -62 dlv
18 62 dlv
18 -62 dlv
18 62 dlv
dle
80 0 3073 4366 dls
80 0 3073 4340 dls
3185 4407 dlt
62 0 dlv
-44 -94 dlv
dle
3279 4384 dlt
0 5 dlv
4 9 dlv
4 4 dlv
9 5 dlv
18 0 dlv
9 -5 dlv
5 -4 dlv
4 -9 dlv
0 -9 dlv
-4 -9 dlv
-9 -14 dlv
-45 -44 dlv
63 0 dlv
dle
3390 4407 dlt
-13 -5 dlv
-9 -13 dlv
-5 -23 dlv
0 -13 dlv
5 -22 dlv
9 -14 dlv
13 -4 dlv
9 0 dlv
14 4 dlv
9 14 dlv
4 22 dlv
0 13 dlv
-4 23 dlv
-9 13 dlv
-14 5 dlv
-9 0 dlv
dle
-63 -94 3426 4407 dls
3462 4322 dlt
-5 -5 dlv
5 -4 dlv
4 4 dlv
-4 5 dlv
dle
3524 4407 dlt
-13 -5 dlv
-9 -13 dlv
-4 -23 dlv
0 -13 dlv
4 -22 dlv
9 -14 dlv
13 -4 dlv
9 0 dlv
14 4 dlv
9 14 dlv
4 22 dlv
0 13 dlv
-4 23 dlv
-9 13 dlv
-14 5 dlv
-9 0 dlv
dle
-62 -94 3560 4407 dls
0 -62 3591 4375 dls
3591 4357 dlt
14 14 dlv
9 4 dlv
13 0 dlv
9 -4 dlv
5 -14 dlv
0 -44 dlv
dle
2973 3702 dlt
0 -56 dlv
4 -11 dlv
6 -3 dlv
7 0 dlv
dle
24 0 2963 3679 dls
3044 3669 dlt
-4 7 dlv
-10 3 dlv
-10 0 dlv
-10 -3 dlv
-3 -7 dlv
3 -7 dlv
7 -3 dlv
17 -3 dlv
6 -4 dlv
4 -6 dlv
0 -4 dlv
-4 -7 dlv
-10 -3 dlv
-10 0 dlv
-10 3 dlv
-3 7 dlv
dle
0 -47 3067 3679 dls
3067 3666 dlt
10 10 dlv
7 3 dlv
10 0 dlv
7 -3 dlv
3 -10 dlv
0 -34 dlv
dle
3104 3666 dlt
10 10 dlv
7 3 dlv
10 0 dlv
7 -3 dlv
3 -10 dlv
0 -34 dlv
dle
3205 3669 dlt
-7 7 dlv
-7 3 dlv
-10 0 dlv
-6 -3 dlv
-7 -7 dlv
-3 -10 dlv
0 -7 dlv
3 -10 dlv
7 -7 dlv
6 -3 dlv
10 0 dlv
7 3 dlv
7 7 dlv
dle
3228 3686 dlt
0 3 dlv
4 7 dlv
3 3 dlv
7 3 dlv
13 0 dlv
7 -3 dlv
3 -3 dlv
3 -7 dlv
0 -7 dlv
-3 -6 dlv
-7 -10 dlv
-33 -34 dlv
47 0 dlv
dle
3332 3702 dlt
-33 0 dlv
-4 -30 dlv
4 4 dlv
10 3 dlv
10 0 dlv
10 -3 dlv
7 -7 dlv
3 -10 dlv
0 -7 dlv
-3 -10 dlv
-7 -7 dlv
-10 -3 dlv
-10 0 dlv
-10 3 dlv
-4 4 dlv
-3 7 dlv
dle
0 -70 3399 3702 dls
3399 3669 dlt
-6 7 dlv
-7 3 dlv
-10 0 dlv
-7 -3 dlv
-7 -7 dlv
-3 -10 dlv
0 -7 dlv
3 -10 dlv
7 -7 dlv
7 -3 dlv
10 0 dlv
7 3 dlv
6 7 dlv
dle
3426 3632 dlt
0 70 dlv
30 0 dlv
10 -3 dlv
4 -3 dlv
3 -7 dlv
0 -10 dlv
-3 -7 dlv
-4 -3 dlv
-10 -3 dlv
-30 0 dlv
dle
0 -62 2975 3272 dls
2975 3254 dlt
13 14 dlv
9 4 dlv
13 0 dlv
9 -4 dlv
5 -14 dlv
0 -44 dlv
dle
3024 3254 dlt
13 14 dlv
9 4 dlv
13 0 dlv
9 -4 dlv
5 -14 dlv
0 -44 dlv
dle
3113 3272 dlt
-4 -4 dlv
4 -5 dlv
5 5 dlv
-5 4 dlv
dle
3113 3219 dlt
-4 -5 dlv
4 -4 dlv
5 4 dlv
-5 5 dlv
dle
3162 3286 dlt
9 4 dlv
14 14 dlv
0 -94 dlv
dle
0 -94 2975 3444 dls
81 0 3010 3404 dls
81 0 3010 3377 dls
3127 3422 dlt
0 4 dlv
4 9 dlv
4 5 dlv
9 4 dlv
18 0 dlv
9 -4 dlv
5 -5 dlv
4 -9 dlv
0 -8 dlv
-4 -9 dlv
-9 -14 dlv
-45 -45 dlv
63 0 dlv
dle
3279 3382 dlt
-68 0 dlv
45 62 dlv
0 -94 dlv
dle
3328 3444 dlt
-14 -4 dlv
-9 -14 dlv
-4 -22 dlv
0 -13 dlv
4 -23 dlv
9 -13 dlv
14 -5 dlv
9 0 dlv
13 5 dlv
9 13 dlv
4 23 dlv
0 13 dlv
-4 22 dlv
-9 14 dlv
-13 4 dlv
-9 0 dlv
dle
-62 -94 3363 3444 dls
3399 3359 dlt
-4 -4 dlv
4 -5 dlv
5 5 dlv
-5 4 dlv
dle
3462 3444 dlt
-14 -4 dlv
-9 -14 dlv
-4 -22 dlv
0 -13 dlv
4 -23 dlv
9 -13 dlv
14 -5 dlv
9 0 dlv
13 5 dlv
9 13 dlv
5 23 dlv
0 13 dlv
-5 22 dlv
-9 14 dlv
-13 4 dlv
-9 0 dlv
dle
-63 -94 3498 3444 dls
0 -63 3529 3413 dls
3529 3395 dlt
13 14 dlv
9 4 dlv
14 0 dlv
9 -4 dlv
4 -14 dlv
0 -45 dlv
dle
2970 3554 dlt
18 -63 dlv
18 63 dlv
18 -63 dlv
18 63 dlv
dle
80 0 3073 3545 dls
80 0 3073 3518 dls
3185 3585 dlt
62 0 dlv
-44 -94 dlv
dle
3279 3563 dlt
0 4 dlv
4 9 dlv
4 5 dlv
9 4 dlv
18 0 dlv
9 -4 dlv
5 -5 dlv
4 -9 dlv
0 -9 dlv
-4 -9 dlv
-9 -13 dlv
-45 -45 dlv
63 0 dlv
dle
3390 3585 dlt
-13 -4 dlv
-9 -14 dlv
-5 -22 dlv
0 -13 dlv
5 -23 dlv
9 -13 dlv
13 -5 dlv
9 0 dlv
14 5 dlv
9 13 dlv
4 23 dlv
0 13 dlv
-4 22 dlv
-9 14 dlv
-14 4 dlv
-9 0 dlv
dle
-63 -94 3426 3585 dls
3462 3500 dlt
-5 -4 dlv
5 -5 dlv
4 5 dlv
-4 4 dlv
dle
3524 3585 dlt
-13 -4 dlv
-9 -14 dlv
-4 -22 dlv
0 -13 dlv
4 -23 dlv
9 -13 dlv
13 -5 dlv
9 0 dlv
14 5 dlv
9 13 dlv
4 23 dlv
0 13 dlv
-4 22 dlv
-9 14 dlv
-14 4 dlv
-9 0 dlv
dle
-62 -94 3560 3585 dls
0 -63 3591 3554 dls
3591 3536 dlt
14 13 dlv
9 5 dlv
13 0 dlv
9 -5 dlv
5 -13 dlv
0 -45 dlv
dle
2970 2732 dlt
18 -62 dlv
18 62 dlv
18 -62 dlv
18 62 dlv
dle
80 0 3073 2723 dls
80 0 3073 2697 dls
3194 2764 dlt
49 0 dlv
-27 -36 dlv
13 0 dlv
9 -5 dlv
5 -4 dlv
4 -13 dlv
0 -9 dlv
-4 -14 dlv
-9 -9 dlv
-14 -4 dlv
-13 0 dlv
-13 4 dlv
-5 5 dlv
-4 9 dlv
dle
3332 2750 dlt
-4 9 dlv
-14 5 dlv
-9 0 dlv
-13 -5 dlv
-9 -13 dlv
-4 -23 dlv
0 -22 dlv
4 -18 dlv
9 -9 dlv
13 -4 dlv
5 0 dlv
13 4 dlv
9 9 dlv
5 14 dlv
0 4 dlv
-5 14 dlv
-9 8 dlv
-13 5 dlv
-5 0 dlv
-13 -5 dlv
-9 -8 dlv
-4 -14 dlv
dle
3390 2764 dlt
-13 -5 dlv
-9 -13 dlv
-5 -23 dlv
0 -13 dlv
5 -22 dlv
9 -14 dlv
13 -4 dlv
9 0 dlv
14 4 dlv
9 14 dlv
4 22 dlv
0 13 dlv
-4 23 dlv
-9 13 dlv
-14 5 dlv
-9 0 dlv
dle
-63 -94 3426 2764 dls
3462 2679 dlt
-5 -5 dlv
5 -4 dlv
4 4 dlv
-4 5 dlv
dle
3524 2764 dlt
-13 -5 dlv
-9 -13 dlv
-4 -23 dlv
0 -13 dlv
4 -22 dlv
9 -14 dlv
13 -4 dlv
9 0 dlv
14 4 dlv
9 14 dlv
4 22 dlv
0 13 dlv
-4 23 dlv
-9 13 dlv
-14 5 dlv
-9 0 dlv
dle
-62 -94 3560 2764 dls
0 -62 3591 2732 dls
3591 2715 dlt
14 13 dlv
9 4 dlv
13 0 dlv
9 -4 dlv
5 -13 dlv
0 -45 dlv
dle
2973 2881 dlt
0 -57 dlv
4 -10 dlv
6 -3 dlv
7 0 dlv
dle
24 0 2963 2858 dls
3044 2848 dlt
-4 6 dlv
-10 4 dlv
-10 0 dlv
-10 -4 dlv
-3 -6 dlv
3 -7 dlv
7 -4 dlv
17 -3 dlv
6 -3 dlv
4 -7 dlv
0 -3 dlv
-4 -7 dlv
-10 -3 dlv
-10 0 dlv
-10 3 dlv
-3 7 dlv
dle
0 -47 3067 2858 dls
3067 2844 dlt
10 10 dlv
7 4 dlv
10 0 dlv
7 -4 dlv
3 -10 dlv
0 -33 dlv
dle
3104 2844 dlt
10 10 dlv
7 4 dlv
10 0 dlv
7 -4 dlv
3 -10 dlv
0 -33 dlv
dle
3205 2848 dlt
-7 6 dlv
-7 4 dlv
-10 0 dlv
-6 -4 dlv
-7 -6 dlv
-3 -11 dlv
0 -6 dlv
3 -10 dlv
7 -7 dlv
6 -3 dlv
10 0 dlv
7 3 dlv
7 7 dlv
dle
3228 2864 dlt
0 4 dlv
4 6 dlv
3 4 dlv
7 3 dlv
13 0 dlv
7 -3 dlv
3 -4 dlv
3 -6 dlv
0 -7 dlv
-3 -7 dlv
-7 -10 dlv
-33 -33 dlv
47 0 dlv
dle
3332 2881 dlt
-33 0 dlv
-4 -30 dlv
4 3 dlv
10 4 dlv
10 0 dlv
10 -4 dlv
7 -6 dlv
3 -11 dlv
0 -6 dlv
-3 -10 dlv
-7 -7 dlv
-10 -3 dlv
-10 0 dlv
-10 3 dlv
-4 3 dlv
-3 7 dlv
dle
0 -70 3399 2881 dls
3399 2848 dlt
-6 6 dlv
-7 4 dlv
-10 0 dlv
-7 -4 dlv
-7 -6 dlv
-3 -11 dlv
0 -6 dlv
3 -10 dlv
7 -7 dlv
7 -3 dlv
10 0 dlv
7 3 dlv
6 7 dlv
dle
3426 2811 dlt
0 70 dlv
47 -70 dlv
0 70 dlv
dle
0 -94 2975 2623 dls
81 0 3010 2583 dls
81 0 3010 2556 dls
3127 2601 dlt
0 4 dlv
4 9 dlv
4 4 dlv
9 5 dlv
18 0 dlv
9 -5 dlv
5 -4 dlv
4 -9 dlv
0 -9 dlv
-4 -9 dlv
-9 -13 dlv
-45 -45 dlv
63 0 dlv
dle
3279 2560 dlt
-68 0 dlv
45 63 dlv
0 -94 dlv
dle
3328 2623 dlt
-14 -5 dlv
-9 -13 dlv
-4 -22 dlv
0 -14 dlv
4 -22 dlv
9 -13 dlv
14 -5 dlv
9 0 dlv
13 5 dlv
9 13 dlv
4 22 dlv
0 14 dlv
-4 22 dlv
-9 13 dlv
-13 5 dlv
-9 0 dlv
dle
-62 -94 3363 2623 dls
3399 2538 dlt
-4 -4 dlv
4 -5 dlv
5 5 dlv
-5 4 dlv
dle
3462 2623 dlt
-14 -5 dlv
-9 -13 dlv
-4 -22 dlv
0 -14 dlv
4 -22 dlv
9 -13 dlv
14 -5 dlv
9 0 dlv
13 5 dlv
9 13 dlv
5 22 dlv
0 14 dlv
-5 22 dlv
-9 13 dlv
-13 5 dlv
-9 0 dlv
dle
-63 -94 3498 2623 dls
0 -63 3529 2592 dls
3529 2574 dlt
13 13 dlv
9 5 dlv
14 0 dlv
9 -5 dlv
4 -13 dlv
0 -45 dlv
dle
0 -63 2975 2451 dls
2975 2433 dlt
13 13 dlv
9 5 dlv
13 0 dlv
9 -5 dlv
5 -13 dlv
0 -45 dlv
dle
3024 2433 dlt
13 13 dlv
9 5 dlv
13 0 dlv
9 -5 dlv
5 -13 dlv
0 -45 dlv
dle
3113 2451 dlt
-4 -5 dlv
4 -4 dlv
5 4 dlv
-5 5 dlv
dle
3113 2397 dlt
-4 -4 dlv
4 -5 dlv
5 5 dlv
-5 4 dlv
dle
3162 2464 dlt
9 5 dlv
14 13 dlv
0 -94 dlv
dle
2970 1911 dlt
18 -63 dlv
18 63 dlv
18 -63 dlv
18 63 dlv
dle
80 0 3073 1902 dls
80 0 3073 1875 dls
3194 1942 dlt
49 0 dlv
-27 -35 dlv
13 0 dlv
9 -5 dlv
5 -4 dlv
4 -14 dlv
0 -9 dlv
-4 -13 dlv
-9 -9 dlv
-14 -5 dlv
-13 0 dlv
-13 5 dlv
-5 4 dlv
-4 9 dlv
dle
3332 1929 dlt
-4 9 dlv
-14 4 dlv
-9 0 dlv
-13 -4 dlv
-9 -14 dlv
-4 -22 dlv
0 -22 dlv
4 -18 dlv
9 -9 dlv
13 -5 dlv
5 0 dlv
13 5 dlv
9 9 dlv
5 13 dlv
0 5 dlv
-5 13 dlv
-9 9 dlv
-13 5 dlv
-5 0 dlv
-13 -5 dlv
-9 -9 dlv
-4 -13 dlv
dle
3390 1942 dlt
-13 -4 dlv
-9 -14 dlv
-5 -22 dlv
0 -13 dlv
5 -23 dlv
9 -13 dlv
13 -5 dlv
9 0 dlv
14 5 dlv
9 13 dlv
4 23 dlv
0 13 dlv
-4 22 dlv
-9 14 dlv
-14 4 dlv
-9 0 dlv
dle
-63 -94 3426 1942 dls
3462 1857 dlt
-5 -4 dlv
5 -5 dlv
4 5 dlv
-4 4 dlv
dle
3524 1942 dlt
-13 -4 dlv
-9 -14 dlv
-4 -22 dlv
0 -13 dlv
4 -23 dlv
9 -13 dlv
13 -5 dlv
9 0 dlv
14 5 dlv
9 13 dlv
4 23 dlv
0 13 dlv
-4 22 dlv
-9 14 dlv
-14 4 dlv
-9 0 dlv
dle
-62 -94 3560 1942 dls
0 -63 3591 1911 dls
3591 1893 dlt
14 14 dlv
9 4 dlv
13 0 dlv
9 -4 dlv
5 -14 dlv
0 -45 dlv
dle
2973 2060 dlt
0 -57 dlv
4 -10 dlv
6 -4 dlv
7 0 dlv
dle
24 0 2963 2036 dls
3044 2026 dlt
-4 7 dlv
-10 3 dlv
-10 0 dlv
-10 -3 dlv
-3 -7 dlv
3 -7 dlv
7 -3 dlv
17 -3 dlv
6 -4 dlv
4 -6 dlv
0 -4 dlv
-4 -6 dlv
-10 -4 dlv
-10 0 dlv
-10 4 dlv
-3 6 dlv
dle
0 -47 3067 2036 dls
3067 2023 dlt
10 10 dlv
7 3 dlv
10 0 dlv
7 -3 dlv
3 -10 dlv
0 -34 dlv
dle
3104 2023 dlt
10 10 dlv
7 3 dlv
10 0 dlv
7 -3 dlv
3 -10 dlv
0 -34 dlv
dle
3205 2026 dlt
-7 7 dlv
-7 3 dlv
-10 0 dlv
-6 -3 dlv
-7 -7 dlv
-3 -10 dlv
0 -7 dlv
3 -10 dlv
7 -6 dlv
6 -4 dlv
10 0 dlv
7 4 dlv
7 6 dlv
dle
3228 2043 dlt
0 3 dlv
4 7 dlv
3 3 dlv
7 4 dlv
13 0 dlv
7 -4 dlv
3 -3 dlv
3 -7 dlv
0 -6 dlv
-3 -7 dlv
-7 -10 dlv
-33 -34 dlv
47 0 dlv
dle
3332 2060 dlt
-33 0 dlv
-4 -31 dlv
4 4 dlv
10 3 dlv
10 0 dlv
10 -3 dlv
7 -7 dlv
3 -10 dlv
0 -7 dlv
-3 -10 dlv
-7 -6 dlv
-10 -4 dlv
-10 0 dlv
-10 4 dlv
-4 3 dlv
-3 7 dlv
dle
0 -71 3399 2060 dls
3399 2026 dlt
-6 7 dlv
-7 3 dlv
-10 0 dlv
-7 -3 dlv
-7 -7 dlv
-3 -10 dlv
0 -7 dlv
3 -10 dlv
7 -6 dlv
7 -4 dlv
10 0 dlv
7 4 dlv
6 6 dlv
dle
3426 1989 dlt
0 71 dlv
47 -71 dlv
0 71 dlv
dle
0 -93 2975 1801 dls
81 0 3010 1761 dls
81 0 3010 1734 dls
3127 1779 dlt
0 5 dlv
4 9 dlv
4 4 dlv
9 4 dlv
18 0 dlv
9 -4 dlv
5 -4 dlv
4 -9 dlv
0 -9 dlv
-4 -9 dlv
-9 -14 dlv
-45 -44 dlv
63 0 dlv
dle
3279 1739 dlt
-68 0 dlv
45 62 dlv
0 -93 dlv
dle
3328 1801 dlt
-14 -4 dlv
-9 -13 dlv
-4 -23 dlv
0 -13 dlv
4 -23 dlv
9 -13 dlv
14 -4 dlv
9 0 dlv
13 4 dlv
9 13 dlv
4 23 dlv
0 13 dlv
-4 23 dlv
-9 13 dlv
-13 4 dlv
-9 0 dlv
dle
-62 -93 3363 1801 dls
3399 1717 dlt
-4 -5 dlv
4 -4 dlv
5 4 dlv
-5 5 dlv
dle
3462 1801 dlt
-14 -4 dlv
-9 -13 dlv
-4 -23 dlv
0 -13 dlv
4 -23 dlv
9 -13 dlv
14 -4 dlv
9 0 dlv
13 4 dlv
9 13 dlv
5 23 dlv
0 13 dlv
-5 23 dlv
-9 13 dlv
-13 4 dlv
-9 0 dlv
dle
-63 -93 3498 1801 dls
0 -62 3529 1770 dls
3529 1752 dlt
13 14 dlv
9 4 dlv
14 0 dlv
9 -4 dlv
4 -14 dlv
0 -44 dlv
dle
0 -62 2975 1629 dls
2975 1611 dlt
13 14 dlv
9 4 dlv
13 0 dlv
9 -4 dlv
5 -14 dlv
0 -44 dlv
dle
3024 1611 dlt
13 14 dlv
9 4 dlv
13 0 dlv
9 -4 dlv
5 -14 dlv
0 -44 dlv
dle
3113 1629 dlt
-4 -4 dlv
4 -5 dlv
5 5 dlv
-5 4 dlv
dle
3113 1576 dlt
-4 -5 dlv
4 -4 dlv
5 4 dlv
-5 5 dlv
dle
3162 1643 dlt
9 4 dlv
14 14 dlv
0 -94 dlv
dle
1000 0 0 slc
1000 0 0 sfc
2975 4583 dlt
0 93 dlv
35 -93 dlv
36 93 dlv
0 -93 dlv
dle
3086 4676 dlt
49 0 dlv
-26 -35 dlv
13 0 dlv
9 -5 dlv
4 -4 dlv
5 -14 dlv
0 -9 dlv
-5 -13 dlv
-8 -9 dlv
-14 -4 dlv
-13 0 dlv
-14 4 dlv
-4 5 dlv
-5 8 dlv
dle
2975 3761 dlt
0 94 dlv
35 -94 dlv
36 94 dlv
0 -94 dlv
dle
3082 3833 dlt
0 4 dlv
4 9 dlv
5 5 dlv
9 4 dlv
18 0 dlv
9 -4 dlv
4 -5 dlv
4 -9 dlv
0 -9 dlv
-4 -9 dlv
-9 -13 dlv
-45 -45 dlv
63 0 dlv
dle
2975 2940 dlt
0 94 dlv
35 -94 dlv
36 94 dlv
0 -94 dlv
dle
3091 3016 dlt
9 4 dlv
13 14 dlv
0 -94 dlv
dle
2975 2118 dlt
0 94 dlv
35 -94 dlv
36 94 dlv
0 -94 dlv
dle
3104 2212 dlt
-13 -4 dlv
-9 -14 dlv
-5 -22 dlv
0 -13 dlv
5 -23 dlv
9 -13 dlv
13 -5 dlv
9 0 dlv
14 5 dlv
8 13 dlv
5 23 dlv
0 13 dlv
-5 22 dlv
-8 14 dlv
-14 4 dlv
-9 0 dlv
dle
-63 -94 3140 2212 dls
1000 902 749 slc
1000 902 749 sfc
0 -63 2423 4481 dls
2423 4463 dlt
13 13 dlv
9 5 dlv
14 0 dlv
9 -5 dlv
4 -13 dlv
0 -45 dlv
dle
2508 4418 dlt
0 94 dlv
31 0 dlv
14 -4 dlv
9 -9 dlv
4 -9 dlv
5 -14 dlv
0 -22 dlv
-5 -13 dlv
-4 -9 dlv
-9 -9 dlv
-14 -5 dlv
-31 0 dlv
dle
2543 4645 dlt
27 -62 dlv
27 62 dlv
dle
0 -93 2673 4676 dls
2673 4632 dlt
-9 9 dlv
-9 4 dlv
-14 0 dlv
-8 -4 dlv
-9 -9 dlv
-5 -14 dlv
0 -9 dlv
5 -13 dlv
9 -9 dlv
8 -4 dlv
14 0 dlv
9 4 dlv
9 9 dlv
dle
0 -93 2758 4676 dls
2758 4632 dlt
-9 9 dlv
-9 4 dlv
-14 0 dlv
-9 -4 dlv
-8 -9 dlv
-5 -14 dlv
0 -9 dlv
5 -13 dlv
8 -9 dlv
9 -4 dlv
14 0 dlv
9 4 dlv
9 9 dlv
dle
0 -62 2798 4676 dls
2798 4592 dlt
-5 -5 dlv
5 -4 dlv
4 4 dlv
-4 5 dlv
dle
0 -62 2529 4070 dls
2529 4052 dlt
13 14 dlv
9 4 dlv
13 0 dlv
9 -4 dlv
5 -14 dlv
0 -44 dlv
dle
2609 4043 dlt
54 0 dlv
0 9 dlv
-5 9 dlv
-4 5 dlv
-9 4 dlv
-14 0 dlv
-9 -4 dlv
-8 -9 dlv
-5 -14 dlv
0 -9 dlv
5 -13 dlv
8 -9 dlv
9 -4 dlv
14 0 dlv
9 4 dlv
9 9 dlv
dle
2698 4101 dlt
0 -76 dlv
5 -13 dlv
9 -4 dlv
9 0 dlv
dle
31 0 2685 4070 dls
2801 4070 dlt
-4 -13 dlv
-9 -9 dlv
-14 -5 dlv
-4 0 dlv
-13 5 dlv
-9 9 dlv
-5 13 dlv
0 5 dlv
5 13 dlv
9 9 dlv
13 4 dlv
4 0 dlv
14 -4 dlv
9 -9 dlv
4 -18 dlv
0 -22 dlv
-4 -23 dlv
-9 -13 dlv
-14 -4 dlv
-8 0 dlv
-14 4 dlv
-4 9 dlv
dle
0 -62 2153 3659 dls
2153 3642 dlt
14 13 dlv
8 4 dlv
14 0 dlv
9 -4 dlv
4 -13 dlv
0 -45 dlv
dle
2238 3597 dlt
0 94 dlv
40 0 dlv
14 -5 dlv
4 -4 dlv
5 -9 dlv
0 -9 dlv
-5 -9 dlv
-4 -4 dlv
-14 -5 dlv
-40 0 dlv
dle
32 -49 2269 3646 dls
2390 3691 dlt
-58 0 dlv
0 -94 dlv
58 0 dlv
dle
36 0 2332 3646 dls
2403 3597 dlt
36 94 dlv
36 -94 dlv
dle
45 0 2417 3628 dls
2502 3597 dlt
0 94 dlv
31 0 dlv
13 -5 dlv
9 -9 dlv
5 -9 dlv
4 -13 dlv
0 -22 dlv
-4 -14 dlv
-5 -9 dlv
-9 -9 dlv
-13 -4 dlv
-31 0 dlv
dle
0 -63 2529 3824 dls
2529 3806 dlt
13 13 dlv
9 5 dlv
13 0 dlv
9 -5 dlv
5 -13 dlv
0 -45 dlv
dle
2609 3797 dlt
54 0 dlv
0 9 dlv
-5 9 dlv
-4 4 dlv
-9 5 dlv
-14 0 dlv
-9 -5 dlv
-8 -9 dlv
-5 -13 dlv
0 -9 dlv
5 -13 dlv
8 -9 dlv
9 -5 dlv
14 0 dlv
9 5 dlv
9 9 dlv
dle
2698 3855 dlt
0 -76 dlv
5 -13 dlv
9 -5 dlv
9 0 dlv
dle
31 0 2685 3824 dls
2801 3824 dlt
-4 -14 dlv
-9 -9 dlv
-14 -4 dlv
-4 0 dlv
-13 4 dlv
-9 9 dlv
-5 14 dlv
0 4 dlv
5 14 dlv
9 9 dlv
13 4 dlv
4 0 dlv
14 -4 dlv
9 -9 dlv
4 -18 dlv
0 -23 dlv
-4 -22 dlv
-9 -13 dlv
-14 -5 dlv
-8 0 dlv
-14 5 dlv
-4 9 dlv
dle
2762 3280 dlt
-9 -4 dlv
-9 -9 dlv
-4 -9 dlv
-5 -14 dlv
0 -22 dlv
5 -13 dlv
4 -9 dlv
9 -9 dlv
9 -5 dlv
18 0 dlv
9 5 dlv
9 9 dlv
4 9 dlv
5 13 dlv
0 22 dlv
-5 14 dlv
-4 9 dlv
-9 9 dlv
-9 4 dlv
-18 0 dlv
dle
26 -27 2776 3204 dls
2247 2775 dlt
0 94 dlv
40 0 dlv
14 -4 dlv
4 -5 dlv
5 -9 dlv
0 -8 dlv
-5 -9 dlv
-4 -5 dlv
-14 -4 dlv
-40 0 dlv
dle
32 -50 2278 2825 dls
2399 2869 dlt
-58 0 dlv
0 -94 dlv
58 0 dlv
dle
36 0 2341 2825 dls
2412 2775 dlt
36 94 dlv
36 -94 dlv
dle
44 0 2426 2807 dls
2511 2775 dlt
0 94 dlv
31 0 dlv
13 -4 dlv
9 -9 dlv
5 -9 dlv
4 -13 dlv
0 -23 dlv
-4 -13 dlv
-5 -9 dlv
-9 -9 dlv
-13 -5 dlv
-31 0 dlv
dle
0 -62 2446 2427 dls
2446 2409 dlt
14 14 dlv
9 4 dlv
13 0 dlv
9 -4 dlv
5 -14 dlv
0 -44 dlv
dle
2527 2401 dlt
54 0 dlv
0 8 dlv
-5 9 dlv
-4 5 dlv
-9 4 dlv
-14 0 dlv
-9 -4 dlv
-9 -9 dlv
-4 -13 dlv
0 -9 dlv
4 -14 dlv
9 -9 dlv
9 -4 dlv
14 0 dlv
9 4 dlv
9 9 dlv
dle
2616 2459 dlt
0 -76 dlv
5 -14 dlv
9 -4 dlv
9 0 dlv
dle
31 0 2603 2427 dls
2674 2441 dlt
9 4 dlv
14 14 dlv
0 -94 dlv
dle
2795 2445 dlt
-4 9 dlv
-14 5 dlv
-9 0 dlv
-13 -5 dlv
-9 -13 dlv
-4 -23 dlv
0 -22 dlv
4 -18 dlv
9 -9 dlv
13 -4 dlv
5 0 dlv
13 4 dlv
9 9 dlv
5 14 dlv
0 4 dlv
-5 13 dlv
-9 9 dlv
-13 5 dlv
-5 0 dlv
-13 -5 dlv
-9 -9 dlv
-4 -13 dlv
dle
2762 3034 dlt
-9 -5 dlv
-9 -9 dlv
-4 -9 dlv
-5 -13 dlv
0 -22 dlv
5 -14 dlv
4 -9 dlv
9 -9 dlv
9 -4 dlv
18 0 dlv
9 4 dlv
9 9 dlv
4 9 dlv
5 14 dlv
0 22 dlv
-5 13 dlv
-4 9 dlv
-9 9 dlv
-9 5 dlv
-18 0 dlv
dle
26 -27 2776 2958 dls
0 -63 2423 2017 dls
2423 1999 dlt
13 13 dlv
9 5 dlv
14 0 dlv
9 -5 dlv
4 -13 dlv
0 -45 dlv
dle
2508 1954 dlt
0 94 dlv
31 0 dlv
14 -5 dlv
9 -9 dlv
4 -8 dlv
5 -14 dlv
0 -22 dlv
-5 -14 dlv
-4 -9 dlv
-9 -8 dlv
-14 -5 dlv
-31 0 dlv
dle
2578 1606 dlt
0 -72 dlv
-5 -13 dlv
-4 -5 dlv
-9 -4 dlv
-14 0 dlv
-8 4 dlv
dle
2578 1592 dlt
-9 9 dlv
-9 5 dlv
-14 0 dlv
-8 -5 dlv
-9 -9 dlv
-5 -13 dlv
0 -9 dlv
5 -13 dlv
9 -9 dlv
8 -5 dlv
14 0 dlv
9 5 dlv
9 9 dlv
dle
0 -63 2614 1606 dls
2614 1588 dlt
13 13 dlv
9 5 dlv
13 0 dlv
9 -5 dlv
5 -13 dlv
0 -45 dlv
dle
0 -94 2748 1637 dls
2748 1592 dlt
-9 9 dlv
-9 5 dlv
-14 0 dlv
-9 -5 dlv
-9 -9 dlv
-4 -13 dlv
0 -9 dlv
4 -13 dlv
9 -9 dlv
9 -5 dlv
14 0 dlv
9 5 dlv
9 9 dlv
dle
0 -62 2788 1637 dls
2788 1552 dlt
-5 -4 dlv
5 -5 dlv
4 5 dlv
-4 4 dlv
dle
0 -63 2446 2181 dls
2446 2163 dlt
14 13 dlv
9 5 dlv
13 0 dlv
9 -5 dlv
5 -13 dlv
0 -45 dlv
dle
2527 2154 dlt
54 0 dlv
0 9 dlv
-5 9 dlv
-4 4 dlv
-9 5 dlv
-14 0 dlv
-9 -5 dlv
-9 -9 dlv
-4 -13 dlv
0 -9 dlv
4 -13 dlv
9 -9 dlv
9 -5 dlv
14 0 dlv
9 5 dlv
9 9 dlv
dle
2616 2212 dlt
0 -76 dlv
5 -13 dlv
9 -5 dlv
9 0 dlv
dle
31 0 2603 2181 dls
2674 2194 dlt
9 5 dlv
14 13 dlv
0 -94 dlv
dle
2795 2199 dlt
-4 9 dlv
-14 4 dlv
-9 0 dlv
-13 -4 dlv
-9 -14 dlv
-4 -22 dlv
0 -22 dlv
4 -18 dlv
9 -9 dlv
13 -5 dlv
5 0 dlv
13 5 dlv
9 9 dlv
5 13 dlv
0 5 dlv
-5 13 dlv
-9 9 dlv
-13 4 dlv
-5 0 dlv
-13 -4 dlv
-9 -9 dlv
-4 -13 dlv
dle
0 800 400 slc
0 800 400 sfc
2769 945 dpb
3004 945 dpv
2886 828 dpv
dpu
0 352 2886 945 dls
0 469 2886 4935 dls
587 0 2593 5404 dls
2886 4700 dlt
0 -176 dlv
-176 0 dlv
0 -352 dlv
176 0 dlv
0 -176 dlv
dle
0 352 2652 4172 dls
2593 4348 58 dcu
117 0 2417 4348 dls
2710 4524 dlt
59 -35 dlv
0 70 dlv
-59 -35 dlv
dle
2886 3879 dlt
0 -177 dlv
-176 0 dlv
0 -352 dlv
176 0 dlv
0 -176 dlv
dle
0 352 2652 3350 dls
2593 3526 59 58 delu
117 0 2417 3526 dls
2710 3702 dlt
59 -35 dlv
0 71 dlv
-59 -36 dlv
dle
2886 2529 dlt
-58 35 dlv
0 -70 dlv
58 35 dlv
dle
235 0 2417 2705 dls
0 352 2652 2529 dls
2886 3057 dlt
0 -176 dlv
-176 0 dlv
0 -352 dlv
176 0 dlv
0 -176 dlv
dle
2886 1708 dlt
-58 35 dlv
0 -71 dlv
58 36 dlv
dle
235 0 2417 1884 dls
0 352 2652 1708 dls
2886 2236 dlt
0 -176 dlv
-176 0 dlv
0 -352 dlv
176 0 dlv
0 -176 dlv
dle
224 749 1000 slc
224 749 1000 sfc
1126 4348 58 dcs
1056 0 2886 3174 dls
0 2464 1126 1884 dls
1291 0 1126 4348 dls
1291 0 1126 1884 dls
118 0 2299 2705 dls
118 0 2299 3526 dls
469 0 657 4348 dls
0 235 2886 4700 dls
0 235 2886 1297 dls
0 117 2886 3879 dls
0 117 2886 3057 dls
0 117 2886 2236 dls
1000 0 0 slc
1000 0 0 sfc
4286 3233 dlt
-11 -5 dlv
-11 -12 dlv
-6 -11 dlv
-6 -17 dlv
0 -28 dlv
6 -16 dlv
6 -11 dlv
11 -12 dlv
11 -5 dlv
22 0 dlv
12 5 dlv
11 12 dlv
5 11 dlv
6 16 dlv
0 28 dlv
-6 17 dlv
-5 11 dlv
-11 12 dlv
-12 5 dlv
-22 0 dlv
dle
33 -33 4303 3138 dls
1512 2646 dlt
0 118 dlv
50 0 dlv
17 -6 dlv
6 -5 dlv
5 -12 dlv
0 -11 dlv
-5 -11 dlv
-6 -6 dlv
-17 -5 dlv
-50 0 dlv
dle
39 -62 1551 2708 dls
1702 2764 dlt
-72 0 dlv
0 -118 dlv
72 0 dlv
dle
44 0 1630 2708 dls
1719 2646 dlt
45 118 dlv
44 -118 dlv
dle
56 0 1736 2685 dls
1842 2646 dlt
0 118 dlv
39 0 dlv
17 -6 dlv
11 -11 dlv
5 -11 dlv
6 -17 dlv
0 -28 dlv
-6 -17 dlv
-5 -11 dlv
-11 -11 dlv
-17 -6 dlv
-39 0 dlv
dle
0 -78 1407 3546 dls
1407 3524 dlt
16 16 dlv
11 6 dlv
17 0 dlv
11 -6 dlv
6 -16 dlv
0 -56 dlv
dle
1513 3468 dlt
0 117 dlv
50 0 dlv
17 -5 dlv
5 -6 dlv
6 -11 dlv
0 -11 dlv
-6 -12 dlv
-5 -5 dlv
-17 -6 dlv
-50 0 dlv
dle
39 -61 1552 3529 dls
1703 3585 dlt
-73 0 dlv
0 -117 dlv
73 0 dlv
dle
45 0 1630 3529 dls
1719 3468 dlt
45 117 dlv
45 -117 dlv
dle
56 0 1736 3507 dls
1842 3468 dlt
0 117 dlv
40 0 dlv
16 -5 dlv
11 -12 dlv
6 -11 dlv
6 -17 dlv
0 -27 dlv
-6 -17 dlv
-6 -11 dlv
-11 -12 dlv
-16 -5 dlv
-40 0 dlv
dle
0 -78 92 4367 dls
92 4345 dlt
17 17 dlv
11 5 dlv
17 0 dlv
11 -5 dlv
6 -17 dlv
0 -56 dlv
dle
198 4289 dlt
0 118 dlv
40 0 dlv
16 -6 dlv
11 -11 dlv
6 -11 dlv
6 -17 dlv
0 -28 dlv
-6 -17 dlv
-6 -11 dlv
-11 -11 dlv
-16 -6 dlv
-40 0 dlv
dle
3062 1117 dlt
0 -63 dlv
-4 -11 dlv
-4 -4 dlv
-7 -4 dlv
-12 0 dlv
-8 4 dlv
dle
3062 1105 dlt
-8 8 dlv
-7 4 dlv
-12 0 dlv
-8 -4 dlv
-8 -8 dlv
-4 -12 dlv
0 -7 dlv
4 -12 dlv
8 -8 dlv
8 -4 dlv
12 0 dlv
7 4 dlv
8 8 dlv
dle
0 -55 3094 1117 dls
3094 1101 dlt
11 12 dlv
8 4 dlv
12 0 dlv
8 -4 dlv
4 -12 dlv
0 -39 dlv
dle
0 -82 3211 1144 dls
3211 1105 dlt
-8 8 dlv
-8 4 dlv
-11 0 dlv
-8 -4 dlv
-8 -8 dlv
-4 -12 dlv
0 -7 dlv
4 -12 dlv
8 -8 dlv
8 -4 dlv
11 0 dlv
8 4 dlv
8 8 dlv
dle
3011 5224 dlt
24 -55 dlv
23 55 dlv
dle
0 -82 3125 5251 dls
3125 5212 dlt
-8 8 dlv
-8 4 dlv
-12 0 dlv
-7 -4 dlv
-8 -8 dlv
-4 -11 dlv
0 -8 dlv
4 -12 dlv
8 -8 dlv
7 -4 dlv
12 0 dlv
8 4 dlv
8 8 dlv
dle
0 -82 3199 5251 dls
3199 5212 dlt
-8 8 dlv
-7 4 dlv
-12 0 dlv
-8 -4 dlv
-8 -8 dlv
-4 -11 dlv
0 -8 dlv
4 -12 dlv
8 -8 dlv
8 -4 dlv
12 0 dlv
7 4 dlv
8 8 dlv
dle
1000 0 0 slc
1000 0 0 sfc
3942 3069 dpb
3942 3280 dpv
4071 3280 dpv
4177 3174 dpv
4071 3069 dpv
dps
2065 2599 dpb
2065 2811 dpv
2194 2811 dpv
2299 2705 dpv
2194 2599 dpv
dps
2065 3421 dpb
2065 3632 dpv
2194 3632 dpv
2299 3526 dpv
2194 3421 dpv
dps
422 4242 dpb
422 4454 dpv
551 4454 dpv
657 4348 dpv
551 4242 dpv
dps
2839 1250 2933 1344 dbs
2839 4888 2933 4982 dbs
2839 3949 2933 4043 dbs
2839 4653 2933 4747 dbs
2370 4301 2464 4395 dbs
2839 3127 2933 3221 dbs
2839 3832 2933 3925 dbs
2370 3480 2464 3573 dbs
2839 3010 2933 3104 dbs
2839 2306 2933 2400 dbs
2370 2658 2464 2752 dbs
2839 2189 2933 2283 dbs
2839 1485 2933 1579 dbs
2370 1837 2464 1931 dbs
0 828 4600 5522 clwin
gfs
%%Trailer
%%EOF
