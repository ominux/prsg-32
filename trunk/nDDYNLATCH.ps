%!PS-Adobe-3.0
%%DocumentFonts: Helvetica Times-Roman Courier
%%Creator: Cadence Design Systems
%%EndComments
%%BeginProlog
%
% Start of Cadence ps.prologue -- Version 5.3.1
% Adobe Postscript Level 2 Color Version.
/setpacking where
{
	/currpack currentpacking def
	pop true setpacking
} if
%******************************************************************************
% Graphics initialization routine.
%
/gis  {
  0 setgray
  save
  mark
  newpath

%
% Scale postscripts 72 dpi divided by the plotter resolution set in pap.
%
  72 resolution div
  dup
  scale

%
% Move the origin of the plot up and to the right so the plotters margin
% is observed.
%
  offsetX offsetY translate

  /stippleArray 10 array def
    stippleArray
     dup    0  <FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
                FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF> put
     dup    1  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    2  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    3  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    4  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    5  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    6  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    7  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    8  <08080404020201018080404020201010
		08080404020201018080404020201010> put
            9  <08081414222241418080414122221414
                08081414222241418080414122221414> put

  /newFont 10 dict def
  newFont begin

    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
    /FontBBox [0 0 1 1] def

    /Encoding 256 array def
    0 1 255 {Encoding exch /.notdef put} for
    Encoding
      dup 48 /0  put
      dup 49 /1  put
      dup 50 /2  put
      dup 51 /3  put
      dup 52 /4  put
      dup 53 /5  put
      dup 54 /6  put
      dup 55 /7  put
      dup 56 /8  put
          57 /9  put


    /BuildChar {
        /char exch def
        /fontdict exch def
        /charname fontdict /Encoding get char get def

         1 0 setcharwidth

          16 16 true
          [16 0 0 -16 -.5 15.50]
           stippleArray char 48 sub 1 getinterval cvx
          imagemask
    } def

  end
  /StippleFont newFont definefont 66 scalefont setfont
  /fillChar 0 def

  /ellipsedict 8 dict def
  ellipsedict /mtrx matrix put

  /xformdict 8 dict def
  xformdict /xformmtrx matrix put

  /color     0 def

  /lineRed   0 def
  /lineGreen 0 def
  /lineBlue  0 def

  /fillRed   0 def
  /fillGreen 0 def
  /fillBlue  0 def

  /hatchSet  0 def

  /rht 0 def
  /rw 0 def
  /ils 1.0 def
  /textalign 1 def

} bind def

%******************************************************************************
% Paper call.  Sets resolution page height and page width.
%
/pap {
    /resolution exch def
    /pageHeight exch def
    /pageWidth exch def
    /offsetY exch def
    /offsetX exch def

  } bind def

%******************************************************************************
% Plot is done.
%
/gfs  {
    showpage
    cleartomark
    restore
  } bind def

%******************************************************************************
% Next Page sequence.
%
/nxp  {

    showpage
    newpath

%
% Scale postscripts 72 dpi divided by the plotter resolution set in pap.
%
    72 resolution div
    dup
    scale
%
% Move the origin of the plot up and to the right so the plotters margin
% is observed.
%
    offsetX offsetY translate
    /ils 1.0 def
    /textalign 1 def
  } bind def

%******************************************************************************
% Rotate Plot Sequence.
%
/rotp  {
  pageWidth 0  translate  %% This moves lower left of plot to
                          %% lower right of page.

  90 rotate    %% rotate plot 90 degs.
} bind def
%******************************************************************************
% Clipping Window
%
/clwin  {
    initclip
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    newpath
    x1 y1 moveto
    x2 y1 lineto
    x2 y2 lineto
    x1 y2 lineto
    closepath
    clip
} bind def
%******************************************************************************
% These to routines keep track of the bounding box of the shape.
% This information is used when filling the drawn shape.
%
/bblineto {
  dup dup
  /cury exch def
  miny lt {/miny exch def}
    {dup maxy gt { /maxy exch def }
           {pop } ifelse } ifelse
  dup dup
  minx lt {/minx exch def}
    {dup maxx gt { /maxx exch def }
           { pop } ifelse } ifelse
  cury lineto
} bind def

/bbmoveto {
  dup dup
  /miny exch def /maxy exch def /cury exch def
  dup dup
  /minx exch def /maxx exch def
  cury moveto
} bind def
%******************************************************************************
% Internal ellipical arc routine.
%    x y xradius yradius startangle endangle ellipse
%
/ellipse
  {
    /endangle exch def
    /startangle exch def
    /yrad exch def
    /xrad exch def
    /y exch def
    /x exch def

    startangle endangle gt {
      save
      /tmpangle startangle def
      /startangle endangle def
      /endangle tmpangle def
      restore
    } if

    ellipsedict begin
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
    end
  } bind def
%******************************************************************************
% Resident Font Scale Sequence
%    x y rfss
%
/rfss  {
    4 2 roll
    dup
    3 div
    add
    scalefont
    setfont
    0 color ne {setLineColor}
               { 0 setgray } ifelse
  } bind def
%******************************************************************************
% Resident Font End
%
%
/rfe
{
/width exch def
5 1 roll
moveto

xformdict begin
/savematrix xformmtrx currentmatrix def

exch 				% rotate mirror to mirror rotate
matrix rotate concat		% add rotation to current transform matrix
dup 1 eq
	{pop 1 -1}		% X mirror

	{2 eq
		{-1 1}		% Y mirror
		{1 1}		% No mirror
	ifelse}
ifelse matrix scale concat	% add mirror to current transform matrix


dup				% duplicate (string)
length				% replace one of the strings with its length
dup 0 ne
{
	3 -1 roll		% move fixed width flag to top of stack
	0 eq
	{			% if flag is false (0) do old string handling
		/numChr exch def
		dup stringwidth	%stack  wy,wx,(string)
		pop
		width
		exch sub	%stack  xdiff,ydiff,(string)

		cvi
		numChr idiv	%stack  xspace,ydiff,(string)

		/xoff exch def

		{		% this is the positioning  function for kshow
			pop pop
			xoff
			0
			rmoveto
		}

		exch
		kshow
	}

	{			% if flag is true (not 0) just show string
		pop show
	}
	ifelse
}

{
	pop pop pop
}
ifelse
      savematrix setmatrix
    end
  } bind def
%******************************************************************************
% Resident Font Text Alignment
%
/rfta {						% <align> rfta
	/textalign exch def
} bind def
%******************************************************************************
% Resident Font Interline Space
%
/rfis {						% <space> rfis
	/ils exch def
} bind def
%******************************************************************************
% Resident Font Scale
%
/rfsc {						% <ht> <rotate> <mirror> rfs
% What I need to do here is to validate <ht>.  <ht> can not be 0.  If it is 0
% then make it 1.  To do this I will need to use the roll operation and exch
% and maybe dup.  The algorithm looks like this:
% Roll stack to make it look like : <rotate> <mirror> <ht>
% duplicate <ht> so I can test it.
% If <ht> is equal to 0 then
% exchange 1 for <ht>
% In any case roll stack to make it look like: <ht> <rotate> <mirror>
% qed.
%
	3 -1 roll		% <rotate> <mirror> <ht>
	dup 0 eq
	{
		1 exch pop	% <rotate> <mirror> <ht=1>
	}
	if
	3 1 roll		% <ht> <rotate> <mirror>

	0 color ne
	{
		setLineColor
	}
	{
		0 setgray
	}
	ifelse

	/tasz 60 def
	/taln 59 def

	/ta tasz array def
	/cta ta def
	/tc 0 def
	/sa tasz array def
	/sc 0 def
} bind def
%******************************************************************************
% Resident Font Restricted Text
%
/rfrt {						% <height> <width> rfrt
	/rht exch def
	/rw exch def
	% Since restricting one dimension and not the other is not supported
	% if one dimension is turned off then ensure that both dimensions
	% are turned off (a value of 0 means no restriction)
	rht 0 eq rw 0 eq or
	{
		/rht 0 def
		/rw 0 def
	}
	if
} bind def
%******************************************************************************
% Resident Font Text Score
%
/rfts {						% <score> <start> <end> rfts
	sc tasz lt
	{
		3 -1 roll 3 array astore
		sa sc 3 -1 roll put
		/sc sc 1 add def
	}
	{
		pop pop pop
	} ifelse
} bind def
%******************************************************************************
% Resident Font Text
%
/rft {						% (text) rft
	tc taln gt tc tasz mod 0 eq and
	{
		cta /cta tasz array dup def put
	} if

	tc tasz mod exch cta 3 1 roll sc
	sa dup length array copy
	3 array astore put

	/sc 0 def
	/tc tc 1 add def
} bind def
%******************************************************************************
% Resident Font Complete
%
/rfc {						% <x> <y> rfc
	/cta ta def

	%
	% If text is restricted or if text alignment is not left, find the
	% longest text string
	%
	/mw 0 def
	rw 0 ne textalign 3 gt or
	{
		%
		% Find the widest text string
		%
		5 index		% <fn> <ht> <rot> <mir> <x> <y> <fn>
		setfont
		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			tasz mod cta exch get 0 get
			stringwidth pop dup mw gt
			{
				/mw exch def null
			}
			if

			pop
		}
		for

		/cta ta def
	}
	if

	%
	% Operand stack:		<fn> <ht> <rot> <mir> <x> <y>
	% Check for restricted text
	%
	rw 0 ne
	{

		%
		% Compute font scale factors
		%
		6 -2 roll pop		% <rot> <mir> <x> <y> <fn>
		rw mw div
		rht tc div dup ils mul 0.5 add cvi /tht exch def
		matrix scale makefont	% <rot> <mir> <x> <y> <fn>
		/mw rw def
	}
	{
		6 -2 roll		% <rot> <mir> <x> <y> <fn> <ht>
		dup 0 eq		% Test if height is 0
		{			% change to 1 if it is
                	1 exch pop	% <rot> <mir> <x> <y> <fn> <1>
		}
		if
		dup ils mul 0.5 add cvi /tht exch def
		dup mw mul /mw exch def scalefont
	}
	ifelse

	setfont				% <rot> <mir> <x> <y>

	moveto			% <rot> <mir>

	xformdict begin
		/savematrix xformmtrx currentmatrix def

		exch matrix rotate concat
		dup 1 eq
		{
			pop 1.0 -1.0		% x mirror
		}
		{
			2 eq
			{
				-1.0 1.0	% y mirror
			}
			{
				1.0 1.0		% no mirror
			}
			ifelse
		}
		ifelse
		matrix scale concat

		currentpoint

		%
		% Adjust origin for text alignment. For lc (4), cc (5), and uc
		% (6) move left by width / 2. For lr (7), cr (8), and ur (9)
		% move left by width. For cl (2), cc (5), and cr (8) move down
		% by height / 2. For ul (3), uc (6), and ur (9) move down by
		% height.
		%
		textalign 2 eq textalign 5 eq or textalign 8 eq or
		{
			tht tc mul 2 div sub
		} if
		textalign 3 eq textalign 6 eq or textalign 9 eq or
		{
			tht tc mul sub
		} if
		/oy exch def

		textalign 3 gt textalign 7 lt and
		{
			mw 2 div sub
		} if
		textalign 6 gt textalign 10 lt and
		{
			mw sub
		} if
		/ox exch def

		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			cta exch tasz mod get aload pop
			dup 3 -1 roll	% (str) [score] [score] <cnt>
			0 1 3 -1 roll 1 sub	% (str) [score] [score] 0 1 <cnt>
			{
				newpath ox oy moveto
				get aload pop pop exch	% ... <len> <start>
				dup 0 exch		% ... <len> <start> 0 <s
				5 index 3 1 roll	% ... (str) 0 <start>
				getinterval		% ... <len> <start> (.)
				stringwidth pop tht rmoveto
				3 index			% ... <len> <start> (str)
				3 1 roll exch		% ... (str) <start> <len>
%				dup 3 1 roll
%				sub
				getinterval stringwidth pop
				0 rlineto stroke
				dup
			}
			for
			pop pop
			ox oy moveto
			show

			%
			% Move origin for next line
			%
			/oy oy tht sub def
		}
		for

		savematrix setmatrix
	end
	pop					% throw away the "0"
} bind def
%******************************************************************************
% Draw line sequence.
%
/dls  {
  newpath
  moveto
  rlineto
  gsave
  0 color ne { setLineColor }
             { 0 setgray } ifelse
  stroke
  grestore
} bind def
%******************************************************************************
% Draw line to.
%
/dlt  {
  newpath
  gsave
  0 color ne { setLineColor }
             { 0 setgray } ifelse
  moveto
} bind def
%******************************************************************************
%
/dslt  {
  newpath
  gsave
  0 color ne { setLineColor }
             { 0 setgray } ifelse
  moveto
} bind def
%******************************************************************************
%
/dlv  {
  rlineto
} bind def
%******************************************************************************
%
/dle  {
  stroke
  grestore
} bind def
%******************************************************************************
% Move to.
/mps {
  newpath
  moveto
} bind def
%******************************************************************************
%
% Draw Box Unfilled
%    x1 y1 x2 y2 dbu
%
/dbu  {
    0 color ne { setLineColor } if
    newpath
    moveto
    dup 0 rlineto
    0 3 -1 roll
    rlineto
    neg 0 rlineto
    closepath
    stroke
  } bind def
%******************************************************************************
%
% Draw Box Filled
%    x1 y1 x2 y2 dbf
%
/dbf  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    newpath
    x1 y1 bbmoveto
    x2 y1 bblineto
    x2 y2 bblineto
    x1 y2 bblineto
    closepath
    gsave
    0 color ne { setFillColor } if
    clip fillpath grestore
  } bind def
%******************************************************************************
% Draw Box Solid
%    x1 y1 x2 y2 dsb
%
/dbs  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    newpath
    x1 y1 moveto
    x2 y1 lineto
    x2 y2 lineto
    x1 y2 lineto
    closepath
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse
    fill grestore
    0 color ne { setLineColor } if stroke
  } bind def

%******************************************************************************
% Draw Polygon Begin
%    x y dpb
%
/dpb  {
    newpath bbmoveto
  } bind def

%******************************************************************************
% Draw Polygon Unfilled
%    x y dpu
%
/dpu  {
      closepath
      gsave
      0 color ne { setLineColor } if
      stroke
      grestore
   } bind def

%******************************************************************************
% Draw Polygon Filled
%    x y dpf
%
/dpf  {
    closepath
    gsave
    0 color ne { setFillColor } if
    clip fillpath grestore
  } bind def

%******************************************************************************
% Draw Polygon Solid
%    x y dps
%
/dps  {
    closepath
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse
    fill grestore
    0 color ne { setLineColor } if stroke
  } bind def

%******************************************************************************
% Draw Polygon Vertex
%    x y dpv
%
/dpv  {
    bblineto
  } bind def

%******************************************************************************
% Draw Circle Unfilled
%    x y radius dcu
%
/dcu  {
    /radius exch def
    /y exch def
    /x exch def

    newpath
    x y radius radius 0 360 ellipse
    gsave
    0 color ne { setLineColor } if
    stroke
    grestore
  } bind def
%******************************************************************************
% Draw Circle Filled
%    x y radius dcs
%
/dcf  {
    /radius exch def
    /y exch def
    /x exch def
    /minx x radius sub def
    /miny y radius sub def
    /maxx x radius add def
    /maxy y radius add def

    newpath
    x y radius radius 0 360 ellipse
    gsave
    0 color ne { setFillColor } if
    clip fillpath
    grestore
  } bind def

%******************************************************************************
% Draw Circle Solid
%    x y radius dcs
%
/dcs  {
    /radius exch def
    /y exch def
    /x exch def

          newpath
    x y radius radius 0 360 ellipse
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse
    fill grestore
    0 color ne {setLineColor} if stroke
  } bind def
%******************************************************************************
% Draw Ellipse Unfilled
%    x y xradius yradius deu
%
/delu  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    newpath
    x y xradius yradius 0 360 ellipse
    gsave
    0 color ne { setLineColor } if
    stroke
    grestore
  } bind def
%******************************************************************************
% Draw Ellipse Filled
%    x y xradius yradius def
%
/delf  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def
    /minx x xradius sub def
    /miny y yradius sub def
    /maxx x xradius add def
    /maxy y yradius add def

    newpath
    x y xradius yradius 0 360 ellipse
    gsave
    0 color ne { setFillColor } if
    clip fillpath
    grestore
  } bind def

%******************************************************************************
% Draw Ellipse Solid
%    x y xradius yradius des
%
/dels  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    newpath
    x y xradius yradius 0 360 ellipse
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse

    fill grestore
    0 color ne {setLineColor} if stroke
  } bind def
%******************************************************************************
% Draw Arc Unfilled
%    x y xradius yradius startangle endangle das
%
/dau  { newpath ellipse
        gsave
        0 color ne { setLineColor } if
        stroke
        grestore
      } bind def
%******************************************************************************
% Line Define Code.
%
/setlinedash {
    1 index length 11 gt
    {exch dup length 11 sub 11 getinterval exch } if
    setdash
  } bind def

/lpb    {
    pop
    [
    /offset 0 def
    /offcount 0 def
    /oncount 0 def
  } bind def

/lpon  {
    /oncount exch def
    pop
    oncount
  } bind def

/lpoff  {
    /offcount exch def
    pop
    oncount 0 eq
    {/offset offcount def }
    { offcount } ifelse
  } bind def

/lpe  {
    /linewidth exch def
    pop
    offset 0 ne
    { offset } if ] 0 setlinedash
    linewidth dup 1 eq {pop 0} if setlinewidth
  } bind def

/sls    { pop } bind def

/ssls  { [] 0 setdash
          1 setlinewidth
        } bind def

%******************************************************************************
% Fill pattern define code.
%
/fillpath  {
    0 color ne { setFillColor } if
    /str 1 string def
    /minx minx 66 div
    truncate 66 mul def
    /miny miny 66 div
    truncate 66 mul def

          /fillLine maxx minx sub cvi 66 idiv 1 add string def

          0 1 fillLine length 1 sub {
            fillLine exch fillChar str cvs cvi 48 add put
          } for

          minx
          miny 66 maxy
            { exch dup 3 -1 roll moveto fillLine show
          } for pop

    hatchSet 1 eq {0 color ne { setLineColor } if stroke} if
} bind def


/fds  { pop /currchar 30 def} bind def
/fdf   {
    exch
    /char exch def
    /stipple stippleArray char get def
    stipple exch currchar
    exch putinterval
    stippleArray char stipple put
    /currchar currchar 2 sub def
  } bind def
/fde  {
    pop
  } bind def
/sfp  {
    /fillChar exch def
    /hatchSet 0 def
    fillChar 8 ge {/hatchSet 1 def} if
    /StippleFont findfont 66 scalefont setfont
  } bind def
/setLineColor {
  lineRed    1000 div
  lineGreen  1000 div
  lineBlue   1000 div
  setrgbcolor
} bind def

/setFillColor {
  fillRed    1000 div
  fillGreen  1000 div
  fillBlue   1000 div
  setrgbcolor
} bind def

/slc {
  /lineBlue  exch def
  /lineGreen exch def
  /lineRed   exch def
  /color 1 def
  lineBlue 1000 eq {lineGreen 1000 eq {lineRed 1000 eq {
    /lineBlue  0 def
    /lineGreen 0 def
    /lineRed   0 def
  } if} if} if
} bind def

/sfc {
  /fillBlue  exch def
  /fillGreen exch def
  /fillRed   exch def
  /color 1 def
  fillBlue 1000 eq {fillGreen 1000 eq {fillRed 1000 eq {
    /fillBlue  0 def
    /fillGreen 0 def
    /fillRed   0 def
  } if} if} if
} bind def
%******************************************************************************
%
% End of Cadence ps.prologue
%
%******************************************************************************
/setpacking where
{
	pop currpack setpacking
} if
%%EndProlog
/#copies 1 def
150 150 4600 6660 600 pap
%%Page: cds 1
gis
9 840 4599 5818 clwin
0 840 4598 5818 clwin
0 840 4598 5818 clwin
ssls
1000 502 0 slc
1000 502 0 sfc
2607 4080 dlt
0 -50 dlv
3 -9 dlv
5 -3 dlv
6 0 dlv
dle
20 0 2598 4059 dls
2668 4051 dlt
-3 5 dlv
-8 3 dlv
-9 0 dlv
-9 -3 dlv
-3 -5 dlv
3 -6 dlv
6 -3 dlv
14 -3 dlv
6 -3 dlv
3 -6 dlv
0 -3 dlv
-3 -6 dlv
-8 -3 dlv
-9 0 dlv
-9 3 dlv
-3 6 dlv
dle
0 -41 2689 4059 dls
2689 4048 dlt
9 8 dlv
6 3 dlv
8 0 dlv
6 -3 dlv
3 -8 dlv
0 -30 dlv
dle
2721 4048 dlt
9 8 dlv
6 3 dlv
9 0 dlv
6 -3 dlv
3 -8 dlv
0 -30 dlv
dle
2809 4051 dlt
-6 5 dlv
-5 3 dlv
-9 0 dlv
-6 -3 dlv
-6 -5 dlv
-3 -9 dlv
0 -6 dlv
3 -9 dlv
6 -6 dlv
6 -3 dlv
9 0 dlv
5 3 dlv
6 6 dlv
dle
2830 4065 dlt
0 3 dlv
3 6 dlv
3 3 dlv
6 3 dlv
11 0 dlv
6 -3 dlv
3 -3 dlv
3 -6 dlv
0 -6 dlv
-3 -6 dlv
-6 -8 dlv
-29 -30 dlv
41 0 dlv
dle
2921 4080 dlt
-29 0 dlv
-3 -26 dlv
3 2 dlv
8 3 dlv
9 0 dlv
9 -3 dlv
6 -5 dlv
3 -9 dlv
0 -6 dlv
-3 -9 dlv
-6 -6 dlv
-9 -3 dlv
-9 0 dlv
-8 3 dlv
-3 3 dlv
-3 6 dlv
dle
0 -62 2980 4080 dls
2980 4051 dlt
-6 5 dlv
-6 3 dlv
-9 0 dlv
-6 -3 dlv
-5 -5 dlv
-3 -9 dlv
0 -6 dlv
3 -9 dlv
5 -6 dlv
6 -3 dlv
9 0 dlv
6 3 dlv
6 6 dlv
dle
3003 4018 dlt
0 62 dlv
27 0 dlv
9 -3 dlv
3 -3 dlv
3 -6 dlv
0 -9 dlv
-3 -5 dlv
-3 -3 dlv
-9 -3 dlv
-27 0 dlv
dle
0 -55 2608 3703 dls
2608 3687 dlt
11 12 dlv
8 4 dlv
12 0 dlv
8 -4 dlv
4 -12 dlv
0 -39 dlv
dle
2651 3687 dlt
11 12 dlv
8 4 dlv
12 0 dlv
8 -4 dlv
4 -12 dlv
0 -39 dlv
dle
2729 3703 dlt
-4 -4 dlv
4 -4 dlv
4 4 dlv
-4 4 dlv
dle
2729 3656 dlt
-4 -4 dlv
4 -4 dlv
4 4 dlv
-4 4 dlv
dle
2772 3715 dlt
8 3 dlv
12 12 dlv
0 -82 dlv
dle
0 -83 2608 3854 dls
70 0 2639 3818 dls
70 0 2639 3795 dls
2741 3834 dlt
0 4 dlv
4 8 dlv
4 4 dlv
7 4 dlv
16 0 dlv
8 -4 dlv
4 -4 dlv
4 -8 dlv
0 -8 dlv
-4 -8 dlv
-8 -11 dlv
-39 -40 dlv
55 0 dlv
dle
2874 3799 dlt
-59 0 dlv
39 55 dlv
0 -83 dlv
dle
2917 3854 dlt
-12 -4 dlv
-7 -12 dlv
-4 -20 dlv
0 -11 dlv
4 -20 dlv
7 -12 dlv
12 -4 dlv
8 0 dlv
12 4 dlv
8 12 dlv
3 20 dlv
0 11 dlv
-3 20 dlv
-8 12 dlv
-12 4 dlv
-8 0 dlv
dle
-54 -83 2948 3854 dls
2980 3779 dlt
-4 -4 dlv
4 -4 dlv
4 4 dlv
-4 4 dlv
dle
3035 3854 dlt
-12 -4 dlv
-8 -12 dlv
-4 -20 dlv
0 -11 dlv
4 -20 dlv
8 -12 dlv
12 -4 dlv
8 0 dlv
11 4 dlv
8 12 dlv
4 20 dlv
0 11 dlv
-4 20 dlv
-8 12 dlv
-11 4 dlv
-8 0 dlv
dle
-55 -83 3066 3854 dls
0 -55 3093 3826 dls
3093 3811 dlt
12 11 dlv
8 4 dlv
12 0 dlv
8 -4 dlv
4 -11 dlv
0 -40 dlv
dle
2604 3950 dlt
15 -55 dlv
16 55 dlv
16 -55 dlv
15 55 dlv
dle
70 0 2694 3942 dls
70 0 2694 3918 dls
2792 3977 dlt
55 0 dlv
-40 -82 dlv
dle
2874 3957 dlt
0 4 dlv
4 8 dlv
4 4 dlv
8 4 dlv
15 0 dlv
8 -4 dlv
4 -4 dlv
4 -8 dlv
0 -7 dlv
-4 -8 dlv
-8 -12 dlv
-39 -39 dlv
55 0 dlv
dle
2972 3977 dlt
-12 -4 dlv
-8 -12 dlv
-4 -19 dlv
0 -12 dlv
4 -20 dlv
8 -11 dlv
12 -4 dlv
8 0 dlv
12 4 dlv
7 11 dlv
4 20 dlv
0 12 dlv
-4 19 dlv
-7 12 dlv
-12 4 dlv
-8 0 dlv
dle
-55 -82 3003 3977 dls
3035 3903 dlt
-4 -4 dlv
4 -4 dlv
4 4 dlv
-4 4 dlv
dle
3090 3977 dlt
-12 -4 dlv
-8 -12 dlv
-4 -19 dlv
0 -12 dlv
4 -20 dlv
8 -11 dlv
12 -4 dlv
7 0 dlv
12 4 dlv
8 11 dlv
4 20 dlv
0 12 dlv
-4 19 dlv
-8 12 dlv
-12 4 dlv
-7 0 dlv
dle
-55 -82 3121 3977 dls
0 -55 3148 3950 dls
3148 3934 dlt
12 12 dlv
8 4 dlv
12 0 dlv
8 -4 dlv
3 -12 dlv
0 -39 dlv
dle
2607 3360 dlt
0 -50 dlv
3 -9 dlv
5 -3 dlv
6 0 dlv
dle
20 0 2598 3339 dls
2668 3330 dlt
-3 6 dlv
-8 3 dlv
-9 0 dlv
-9 -3 dlv
-3 -6 dlv
3 -5 dlv
6 -3 dlv
14 -3 dlv
6 -3 dlv
3 -6 dlv
0 -3 dlv
-3 -6 dlv
-8 -3 dlv
-9 0 dlv
-9 3 dlv
-3 6 dlv
dle
0 -41 2689 3339 dls
2689 3328 dlt
9 8 dlv
6 3 dlv
8 0 dlv
6 -3 dlv
3 -8 dlv
0 -30 dlv
dle
2721 3328 dlt
9 8 dlv
6 3 dlv
9 0 dlv
6 -3 dlv
3 -8 dlv
0 -30 dlv
dle
2809 3330 dlt
-6 6 dlv
-5 3 dlv
-9 0 dlv
-6 -3 dlv
-6 -6 dlv
-3 -8 dlv
0 -6 dlv
3 -9 dlv
6 -6 dlv
6 -3 dlv
9 0 dlv
5 3 dlv
6 6 dlv
dle
2830 3345 dlt
0 3 dlv
3 6 dlv
3 3 dlv
6 3 dlv
11 0 dlv
6 -3 dlv
3 -3 dlv
3 -6 dlv
0 -6 dlv
-3 -6 dlv
-6 -8 dlv
-29 -30 dlv
41 0 dlv
dle
2921 3360 dlt
-29 0 dlv
-3 -27 dlv
3 3 dlv
8 3 dlv
9 0 dlv
9 -3 dlv
6 -6 dlv
3 -8 dlv
0 -6 dlv
-3 -9 dlv
-6 -6 dlv
-9 -3 dlv
-9 0 dlv
-8 3 dlv
-3 3 dlv
-3 6 dlv
dle
0 -62 2980 3360 dls
2980 3330 dlt
-6 6 dlv
-6 3 dlv
-9 0 dlv
-6 -3 dlv
-5 -6 dlv
-3 -8 dlv
0 -6 dlv
3 -9 dlv
5 -6 dlv
6 -3 dlv
9 0 dlv
6 3 dlv
6 6 dlv
dle
3003 3298 dlt
0 62 dlv
27 0 dlv
9 -3 dlv
3 -3 dlv
3 -6 dlv
0 -9 dlv
-3 -6 dlv
-3 -3 dlv
-9 -2 dlv
-27 0 dlv
dle
0 -55 2608 2983 dls
2608 2967 dlt
11 12 dlv
8 4 dlv
12 0 dlv
8 -4 dlv
4 -12 dlv
0 -39 dlv
dle
2651 2967 dlt
11 12 dlv
8 4 dlv
12 0 dlv
8 -4 dlv
4 -12 dlv
0 -39 dlv
dle
2729 2983 dlt
-4 -4 dlv
4 -4 dlv
4 4 dlv
-4 4 dlv
dle
2729 2936 dlt
-4 -4 dlv
4 -4 dlv
4 4 dlv
-4 4 dlv
dle
2772 2994 dlt
8 4 dlv
12 12 dlv
0 -82 dlv
dle
0 -83 2608 3134 dls
70 0 2639 3098 dls
70 0 2639 3075 dls
2741 3114 dlt
0 4 dlv
4 8 dlv
4 4 dlv
7 4 dlv
16 0 dlv
8 -4 dlv
4 -4 dlv
4 -8 dlv
0 -8 dlv
-4 -8 dlv
-8 -12 dlv
-39 -39 dlv
55 0 dlv
dle
2874 3079 dlt
-59 0 dlv
39 55 dlv
0 -83 dlv
dle
2917 3134 dlt
-12 -4 dlv
-7 -12 dlv
-4 -20 dlv
0 -11 dlv
4 -20 dlv
7 -12 dlv
12 -4 dlv
8 0 dlv
12 4 dlv
8 12 dlv
3 20 dlv
0 11 dlv
-3 20 dlv
-8 12 dlv
-12 4 dlv
-8 0 dlv
dle
-54 -83 2948 3134 dls
2980 3059 dlt
-4 -4 dlv
4 -4 dlv
4 4 dlv
-4 4 dlv
dle
3035 3134 dlt
-12 -4 dlv
-8 -12 dlv
-4 -20 dlv
0 -11 dlv
4 -20 dlv
8 -12 dlv
12 -4 dlv
8 0 dlv
11 4 dlv
8 12 dlv
4 20 dlv
0 11 dlv
-4 20 dlv
-8 12 dlv
-11 4 dlv
-8 0 dlv
dle
-55 -83 3066 3134 dls
0 -55 3093 3106 dls
3093 3090 dlt
12 12 dlv
8 4 dlv
12 0 dlv
8 -4 dlv
4 -12 dlv
0 -39 dlv
dle
2604 3230 dlt
15 -55 dlv
16 55 dlv
16 -55 dlv
15 55 dlv
dle
70 0 2694 3222 dls
70 0 2694 3198 dls
2792 3257 dlt
55 0 dlv
-40 -82 dlv
dle
2874 3237 dlt
0 4 dlv
4 8 dlv
4 4 dlv
8 4 dlv
15 0 dlv
8 -4 dlv
4 -4 dlv
4 -8 dlv
0 -8 dlv
-4 -7 dlv
-8 -12 dlv
-39 -39 dlv
55 0 dlv
dle
2972 3257 dlt
-12 -4 dlv
-8 -12 dlv
-4 -19 dlv
0 -12 dlv
4 -20 dlv
8 -11 dlv
12 -4 dlv
8 0 dlv
12 4 dlv
7 11 dlv
4 20 dlv
0 12 dlv
-4 19 dlv
-7 12 dlv
-12 4 dlv
-8 0 dlv
dle
-55 -82 3003 3257 dls
3035 3183 dlt
-4 -4 dlv
4 -4 dlv
4 4 dlv
-4 4 dlv
dle
3090 3257 dlt
-12 -4 dlv
-8 -12 dlv
-4 -19 dlv
0 -12 dlv
4 -20 dlv
8 -11 dlv
12 -4 dlv
7 0 dlv
12 4 dlv
8 11 dlv
4 20 dlv
0 12 dlv
-4 19 dlv
-8 12 dlv
-12 4 dlv
-7 0 dlv
dle
-55 -82 3121 3257 dls
0 -55 3148 3230 dls
3148 3214 dlt
12 12 dlv
8 4 dlv
12 0 dlv
8 -4 dlv
3 -12 dlv
0 -39 dlv
dle
2604 2509 dlt
15 -54 dlv
16 54 dlv
16 -54 dlv
15 54 dlv
dle
70 0 2694 2502 dls
70 0 2694 2478 dls
2800 2537 dlt
43 0 dlv
-24 -31 dlv
12 0 dlv
8 -4 dlv
4 -4 dlv
4 -12 dlv
0 -8 dlv
-4 -12 dlv
-8 -7 dlv
-12 -4 dlv
-12 0 dlv
-11 4 dlv
-4 3 dlv
-4 8 dlv
dle
2921 2525 dlt
-4 8 dlv
-12 4 dlv
-7 0 dlv
-12 -4 dlv
-8 -12 dlv
-4 -19 dlv
0 -20 dlv
4 -16 dlv
8 -7 dlv
12 -4 dlv
3 0 dlv
12 4 dlv
8 7 dlv
4 12 dlv
0 4 dlv
-4 12 dlv
-8 8 dlv
-12 4 dlv
-3 0 dlv
-12 -4 dlv
-8 -8 dlv
-4 -12 dlv
dle
2972 2537 dlt
-12 -4 dlv
-8 -12 dlv
-4 -19 dlv
0 -12 dlv
4 -20 dlv
8 -11 dlv
12 -4 dlv
8 0 dlv
12 4 dlv
7 11 dlv
4 20 dlv
0 12 dlv
-4 19 dlv
-7 12 dlv
-12 4 dlv
-8 0 dlv
dle
-55 -82 3003 2537 dls
3035 2462 dlt
-4 -3 dlv
4 -4 dlv
4 4 dlv
-4 3 dlv
dle
3090 2537 dlt
-12 -4 dlv
-8 -12 dlv
-4 -19 dlv
0 -12 dlv
4 -20 dlv
8 -11 dlv
12 -4 dlv
7 0 dlv
12 4 dlv
8 11 dlv
4 20 dlv
0 12 dlv
-4 19 dlv
-8 12 dlv
-12 4 dlv
-7 0 dlv
dle
-55 -82 3121 2537 dls
0 -54 3148 2509 dls
3148 2494 dlt
12 12 dlv
8 3 dlv
12 0 dlv
8 -3 dlv
3 -12 dlv
0 -39 dlv
dle
2607 2640 dlt
0 -50 dlv
3 -9 dlv
5 -3 dlv
6 0 dlv
dle
20 0 2598 2619 dls
2668 2610 dlt
-3 6 dlv
-8 3 dlv
-9 0 dlv
-9 -3 dlv
-3 -6 dlv
3 -6 dlv
6 -2 dlv
14 -3 dlv
6 -3 dlv
3 -6 dlv
0 -3 dlv
-3 -6 dlv
-8 -3 dlv
-9 0 dlv
-9 3 dlv
-3 6 dlv
dle
0 -41 2689 2619 dls
2689 2607 dlt
9 9 dlv
6 3 dlv
8 0 dlv
6 -3 dlv
3 -9 dlv
0 -29 dlv
dle
2721 2607 dlt
9 9 dlv
6 3 dlv
9 0 dlv
6 -3 dlv
3 -9 dlv
0 -29 dlv
dle
2809 2610 dlt
-6 6 dlv
-5 3 dlv
-9 0 dlv
-6 -3 dlv
-6 -6 dlv
-3 -8 dlv
0 -6 dlv
3 -9 dlv
6 -6 dlv
6 -3 dlv
9 0 dlv
5 3 dlv
6 6 dlv
dle
2830 2625 dlt
0 3 dlv
3 6 dlv
3 3 dlv
6 3 dlv
11 0 dlv
6 -3 dlv
3 -3 dlv
3 -6 dlv
0 -6 dlv
-3 -6 dlv
-6 -9 dlv
-29 -29 dlv
41 0 dlv
dle
2921 2640 dlt
-29 0 dlv
-3 -27 dlv
3 3 dlv
8 3 dlv
9 0 dlv
9 -3 dlv
6 -6 dlv
3 -8 dlv
0 -6 dlv
-3 -9 dlv
-6 -6 dlv
-9 -3 dlv
-9 0 dlv
-8 3 dlv
-3 3 dlv
-3 6 dlv
dle
0 -62 2980 2640 dls
2980 2610 dlt
-6 6 dlv
-6 3 dlv
-9 0 dlv
-6 -3 dlv
-5 -6 dlv
-3 -8 dlv
0 -6 dlv
3 -9 dlv
5 -6 dlv
6 -3 dlv
9 0 dlv
6 3 dlv
6 6 dlv
dle
3003 2578 dlt
0 62 dlv
42 -62 dlv
0 62 dlv
dle
0 -82 2608 2413 dls
70 0 2639 2378 dls
70 0 2639 2355 dls
2741 2394 dlt
0 4 dlv
4 8 dlv
4 4 dlv
7 3 dlv
16 0 dlv
8 -3 dlv
4 -4 dlv
4 -8 dlv
0 -8 dlv
-4 -8 dlv
-8 -12 dlv
-39 -39 dlv
55 0 dlv
dle
2874 2359 dlt
-59 0 dlv
39 54 dlv
0 -82 dlv
dle
2917 2413 dlt
-12 -3 dlv
-7 -12 dlv
-4 -20 dlv
0 -12 dlv
4 -19 dlv
7 -12 dlv
12 -4 dlv
8 0 dlv
12 4 dlv
8 12 dlv
3 19 dlv
0 12 dlv
-3 20 dlv
-8 12 dlv
-12 3 dlv
-8 0 dlv
dle
-54 -82 2948 2413 dls
2980 2339 dlt
-4 -4 dlv
4 -4 dlv
4 4 dlv
-4 4 dlv
dle
3035 2413 dlt
-12 -3 dlv
-8 -12 dlv
-4 -20 dlv
0 -12 dlv
4 -19 dlv
8 -12 dlv
12 -4 dlv
8 0 dlv
11 4 dlv
8 12 dlv
4 19 dlv
0 12 dlv
-4 20 dlv
-8 12 dlv
-11 3 dlv
-8 0 dlv
dle
-55 -82 3066 2413 dls
0 -55 3093 2386 dls
3093 2370 dlt
12 12 dlv
8 4 dlv
12 0 dlv
8 -4 dlv
4 -12 dlv
0 -39 dlv
dle
0 -55 2608 2263 dls
2608 2247 dlt
11 12 dlv
8 4 dlv
12 0 dlv
8 -4 dlv
4 -12 dlv
0 -39 dlv
dle
2651 2247 dlt
11 12 dlv
8 4 dlv
12 0 dlv
8 -4 dlv
4 -12 dlv
0 -39 dlv
dle
2729 2263 dlt
-4 -4 dlv
4 -4 dlv
4 4 dlv
-4 4 dlv
dle
2729 2216 dlt
-4 -4 dlv
4 -4 dlv
4 4 dlv
-4 4 dlv
dle
2772 2274 dlt
8 4 dlv
12 12 dlv
0 -82 dlv
dle
2604 1789 dlt
15 -55 dlv
16 55 dlv
16 -55 dlv
15 55 dlv
dle
70 0 2694 1782 dls
70 0 2694 1758 dls
2800 1817 dlt
43 0 dlv
-24 -32 dlv
12 0 dlv
8 -3 dlv
4 -4 dlv
4 -12 dlv
0 -8 dlv
-4 -12 dlv
-8 -8 dlv
-12 -4 dlv
-12 0 dlv
-11 4 dlv
-4 4 dlv
-4 8 dlv
dle
2921 1805 dlt
-4 8 dlv
-12 4 dlv
-7 0 dlv
-12 -4 dlv
-8 -12 dlv
-4 -19 dlv
0 -20 dlv
4 -16 dlv
8 -8 dlv
12 -4 dlv
3 0 dlv
12 4 dlv
8 8 dlv
4 12 dlv
0 4 dlv
-4 12 dlv
-8 8 dlv
-12 3 dlv
-3 0 dlv
-12 -3 dlv
-8 -8 dlv
-4 -12 dlv
dle
2972 1817 dlt
-12 -4 dlv
-8 -12 dlv
-4 -19 dlv
0 -12 dlv
4 -20 dlv
8 -12 dlv
12 -4 dlv
8 0 dlv
12 4 dlv
7 12 dlv
4 20 dlv
0 12 dlv
-4 19 dlv
-7 12 dlv
-12 4 dlv
-8 0 dlv
dle
-55 -83 3003 1817 dls
3035 1742 dlt
-4 -4 dlv
4 -4 dlv
4 4 dlv
-4 4 dlv
dle
3090 1817 dlt
-12 -4 dlv
-8 -12 dlv
-4 -19 dlv
0 -12 dlv
4 -20 dlv
8 -12 dlv
12 -4 dlv
7 0 dlv
12 4 dlv
8 12 dlv
4 20 dlv
0 12 dlv
-4 19 dlv
-8 12 dlv
-12 4 dlv
-7 0 dlv
dle
-55 -83 3121 1817 dls
0 -55 3148 1789 dls
3148 1774 dlt
12 11 dlv
8 4 dlv
12 0 dlv
8 -4 dlv
3 -11 dlv
0 -40 dlv
dle
2607 1920 dlt
0 -50 dlv
3 -9 dlv
5 -3 dlv
6 0 dlv
dle
20 0 2598 1899 dls
2668 1890 dlt
-3 6 dlv
-8 3 dlv
-9 0 dlv
-9 -3 dlv
-3 -6 dlv
3 -6 dlv
6 -3 dlv
14 -2 dlv
6 -3 dlv
3 -6 dlv
0 -3 dlv
-3 -6 dlv
-8 -3 dlv
-9 0 dlv
-9 3 dlv
-3 6 dlv
dle
0 -41 2689 1899 dls
2689 1887 dlt
9 9 dlv
6 3 dlv
8 0 dlv
6 -3 dlv
3 -9 dlv
0 -29 dlv
dle
2721 1887 dlt
9 9 dlv
6 3 dlv
9 0 dlv
6 -3 dlv
3 -9 dlv
0 -29 dlv
dle
2809 1890 dlt
-6 6 dlv
-5 3 dlv
-9 0 dlv
-6 -3 dlv
-6 -6 dlv
-3 -9 dlv
0 -5 dlv
3 -9 dlv
6 -6 dlv
6 -3 dlv
9 0 dlv
5 3 dlv
6 6 dlv
dle
2830 1905 dlt
0 3 dlv
3 6 dlv
3 3 dlv
6 3 dlv
11 0 dlv
6 -3 dlv
3 -3 dlv
3 -6 dlv
0 -6 dlv
-3 -6 dlv
-6 -9 dlv
-29 -29 dlv
41 0 dlv
dle
2921 1920 dlt
-29 0 dlv
-3 -27 dlv
3 3 dlv
8 3 dlv
9 0 dlv
9 -3 dlv
6 -6 dlv
3 -9 dlv
0 -5 dlv
-3 -9 dlv
-6 -6 dlv
-9 -3 dlv
-9 0 dlv
-8 3 dlv
-3 3 dlv
-3 6 dlv
dle
0 -62 2980 1920 dls
2980 1890 dlt
-6 6 dlv
-6 3 dlv
-9 0 dlv
-6 -3 dlv
-5 -6 dlv
-3 -9 dlv
0 -5 dlv
3 -9 dlv
5 -6 dlv
6 -3 dlv
9 0 dlv
6 3 dlv
6 6 dlv
dle
3003 1858 dlt
0 62 dlv
42 -62 dlv
0 62 dlv
dle
0 -82 2608 1693 dls
70 0 2639 1658 dls
70 0 2639 1635 dls
2741 1674 dlt
0 4 dlv
4 7 dlv
4 4 dlv
7 4 dlv
16 0 dlv
8 -4 dlv
4 -4 dlv
4 -7 dlv
0 -8 dlv
-4 -8 dlv
-8 -12 dlv
-39 -39 dlv
55 0 dlv
dle
2874 1638 dlt
-59 0 dlv
39 55 dlv
0 -82 dlv
dle
2917 1693 dlt
-12 -4 dlv
-7 -11 dlv
-4 -20 dlv
0 -12 dlv
4 -19 dlv
7 -12 dlv
12 -4 dlv
8 0 dlv
12 4 dlv
8 12 dlv
3 19 dlv
0 12 dlv
-3 20 dlv
-8 11 dlv
-12 4 dlv
-8 0 dlv
dle
-54 -82 2948 1693 dls
2980 1619 dlt
-4 -4 dlv
4 -4 dlv
4 4 dlv
-4 4 dlv
dle
3035 1693 dlt
-12 -4 dlv
-8 -11 dlv
-4 -20 dlv
0 -12 dlv
4 -19 dlv
8 -12 dlv
12 -4 dlv
8 0 dlv
11 4 dlv
8 12 dlv
4 19 dlv
0 12 dlv
-4 20 dlv
-8 11 dlv
-11 4 dlv
-8 0 dlv
dle
-55 -82 3066 1693 dls
0 -55 3093 1666 dls
3093 1650 dlt
12 12 dlv
8 4 dlv
12 0 dlv
8 -4 dlv
4 -12 dlv
0 -39 dlv
dle
0 -54 2608 1542 dls
2608 1527 dlt
11 12 dlv
8 3 dlv
12 0 dlv
8 -3 dlv
4 -12 dlv
0 -39 dlv
dle
2651 1527 dlt
11 12 dlv
8 3 dlv
12 0 dlv
8 -3 dlv
4 -12 dlv
0 -39 dlv
dle
2729 1542 dlt
-4 -3 dlv
4 -4 dlv
4 4 dlv
-4 3 dlv
dle
2729 1495 dlt
-4 -3 dlv
4 -4 dlv
4 4 dlv
-4 3 dlv
dle
2772 1554 dlt
8 4 dlv
12 12 dlv
0 -82 dlv
dle
1000 0 0 slc
1000 0 0 sfc
2608 4131 dlt
0 83 dlv
31 -83 dlv
31 83 dlv
0 -83 dlv
dle
2706 4214 dlt
43 0 dlv
-24 -32 dlv
12 0 dlv
8 -4 dlv
4 -3 dlv
4 -12 dlv
0 -8 dlv
-4 -12 dlv
-8 -8 dlv
-12 -4 dlv
-12 0 dlv
-11 4 dlv
-4 4 dlv
-4 8 dlv
dle
2608 3411 dlt
0 83 dlv
31 -83 dlv
31 83 dlv
0 -83 dlv
dle
2702 3474 dlt
0 4 dlv
4 8 dlv
3 4 dlv
8 4 dlv
16 0 dlv
8 -4 dlv
4 -4 dlv
4 -8 dlv
0 -8 dlv
-4 -8 dlv
-8 -12 dlv
-39 -39 dlv
55 0 dlv
dle
2608 2691 dlt
0 82 dlv
31 -82 dlv
31 82 dlv
0 -82 dlv
dle
2709 2758 dlt
8 4 dlv
12 11 dlv
0 -82 dlv
dle
2608 1971 dlt
0 82 dlv
31 -82 dlv
31 82 dlv
0 -82 dlv
dle
2721 2053 dlt
-12 -4 dlv
-7 -11 dlv
-4 -20 dlv
0 -12 dlv
4 -19 dlv
7 -12 dlv
12 -4 dlv
8 0 dlv
12 4 dlv
8 12 dlv
4 19 dlv
0 12 dlv
-4 20 dlv
-8 11 dlv
-12 4 dlv
-8 0 dlv
dle
-55 -82 2753 2053 dls
1000 902 749 slc
1000 902 749 sfc
0 -55 2124 4042 dls
2124 4027 dlt
12 11 dlv
8 4 dlv
11 0 dlv
8 -4 dlv
4 -11 dlv
0 -40 dlv
dle
2199 3987 dlt
0 83 dlv
27 0 dlv
12 -4 dlv
8 -8 dlv
3 -8 dlv
4 -12 dlv
0 -19 dlv
-4 -12 dlv
-3 -8 dlv
-8 -8 dlv
-12 -4 dlv
-27 0 dlv
dle
2229 4186 dlt
24 -55 dlv
23 55 dlv
dle
0 -83 2343 4214 dls
2343 4175 dlt
-8 7 dlv
-8 4 dlv
-11 0 dlv
-8 -4 dlv
-8 -7 dlv
-4 -12 dlv
0 -8 dlv
4 -12 dlv
8 -8 dlv
8 -4 dlv
11 0 dlv
8 4 dlv
8 8 dlv
dle
0 -83 2417 4214 dls
2417 4175 dlt
-7 7 dlv
-8 4 dlv
-12 0 dlv
-8 -4 dlv
-8 -7 dlv
-4 -12 dlv
0 -8 dlv
4 -12 dlv
8 -8 dlv
8 -4 dlv
12 0 dlv
8 4 dlv
7 8 dlv
dle
0 -55 2453 4214 dls
2453 4139 dlt
-4 -4 dlv
4 -4 dlv
4 4 dlv
-4 4 dlv
dle
0 -55 2217 3682 dls
2217 3667 dlt
11 11 dlv
8 4 dlv
12 0 dlv
8 -4 dlv
4 -11 dlv
0 -40 dlv
dle
2287 3659 dlt
47 0 dlv
0 8 dlv
-4 7 dlv
-4 4 dlv
-7 4 dlv
-12 0 dlv
-8 -4 dlv
-8 -8 dlv
-4 -11 dlv
0 -8 dlv
4 -12 dlv
8 -8 dlv
8 -4 dlv
12 0 dlv
7 4 dlv
8 8 dlv
dle
2366 3710 dlt
0 -67 dlv
3 -12 dlv
8 -4 dlv
8 0 dlv
dle
27 0 2354 3682 dls
2456 3682 dlt
-4 -12 dlv
-8 -7 dlv
-12 -4 dlv
-4 0 dlv
-12 4 dlv
-7 7 dlv
-4 12 dlv
0 4 dlv
4 12 dlv
7 8 dlv
12 4 dlv
4 0 dlv
12 -4 dlv
8 -8 dlv
4 -16 dlv
0 -19 dlv
-4 -20 dlv
-8 -12 dlv
-12 -4 dlv
-8 0 dlv
-11 4 dlv
-4 8 dlv
dle
0 -55 1887 3322 dls
1887 3306 dlt
12 12 dlv
8 4 dlv
12 0 dlv
8 -4 dlv
4 -12 dlv
0 -39 dlv
dle
1962 3267 dlt
0 83 dlv
35 0 dlv
12 -4 dlv
4 -4 dlv
4 -8 dlv
0 -8 dlv
-4 -8 dlv
-4 -4 dlv
-12 -4 dlv
-35 0 dlv
dle
28 -43 1989 3310 dls
2095 3350 dlt
-51 0 dlv
0 -83 dlv
51 0 dlv
dle
32 0 2044 3310 dls
2107 3267 dlt
31 83 dlv
32 -83 dlv
dle
39 0 2119 3295 dls
2193 3267 dlt
0 83 dlv
28 0 dlv
11 -4 dlv
8 -8 dlv
4 -8 dlv
4 -12 dlv
0 -19 dlv
-4 -12 dlv
-4 -8 dlv
-8 -8 dlv
-11 -4 dlv
-28 0 dlv
dle
0 -55 2217 3466 dls
2217 3450 dlt
11 12 dlv
8 4 dlv
12 0 dlv
8 -4 dlv
4 -12 dlv
0 -39 dlv
dle
2287 3443 dlt
47 0 dlv
0 7 dlv
-4 8 dlv
-4 4 dlv
-7 4 dlv
-12 0 dlv
-8 -4 dlv
-8 -8 dlv
-4 -11 dlv
0 -8 dlv
4 -12 dlv
8 -8 dlv
8 -4 dlv
12 0 dlv
7 4 dlv
8 8 dlv
dle
2366 3494 dlt
0 -67 dlv
3 -12 dlv
8 -4 dlv
8 0 dlv
dle
27 0 2354 3466 dls
2456 3466 dlt
-4 -12 dlv
-8 -7 dlv
-12 -4 dlv
-4 0 dlv
-12 4 dlv
-7 7 dlv
-4 12 dlv
0 4 dlv
4 12 dlv
7 8 dlv
12 4 dlv
4 0 dlv
12 -4 dlv
8 -8 dlv
4 -16 dlv
0 -19 dlv
-4 -20 dlv
-8 -12 dlv
-12 -4 dlv
-8 0 dlv
-11 4 dlv
-4 8 dlv
dle
2421 2990 dlt
-7 -4 dlv
-8 -8 dlv
-4 -8 dlv
-4 -12 dlv
0 -19 dlv
4 -12 dlv
4 -8 dlv
8 -8 dlv
7 -4 dlv
16 0 dlv
8 4 dlv
8 8 dlv
4 8 dlv
4 12 dlv
0 19 dlv
-4 12 dlv
-4 8 dlv
-8 8 dlv
-8 4 dlv
-16 0 dlv
dle
24 -24 2433 2923 dls
1970 2547 dlt
0 82 dlv
35 0 dlv
12 -3 dlv
4 -4 dlv
4 -8 dlv
0 -8 dlv
-4 -8 dlv
-4 -4 dlv
-12 -4 dlv
-35 0 dlv
dle
28 -43 1997 2590 dls
2103 2629 dlt
-51 0 dlv
0 -82 dlv
51 0 dlv
dle
31 0 2052 2590 dls
2115 2547 dlt
31 82 dlv
31 -82 dlv
dle
40 0 2126 2575 dls
2201 2547 dlt
0 82 dlv
27 0 dlv
12 -3 dlv
8 -8 dlv
4 -8 dlv
4 -12 dlv
0 -19 dlv
-4 -12 dlv
-4 -8 dlv
-8 -8 dlv
-12 -4 dlv
-27 0 dlv
dle
0 -55 2145 2242 dls
2145 2226 dlt
11 12 dlv
8 4 dlv
12 0 dlv
8 -4 dlv
4 -12 dlv
0 -39 dlv
dle
2215 2218 dlt
47 0 dlv
0 8 dlv
-4 8 dlv
-4 4 dlv
-7 4 dlv
-12 0 dlv
-8 -4 dlv
-8 -8 dlv
-4 -12 dlv
0 -7 dlv
4 -12 dlv
8 -8 dlv
8 -4 dlv
12 0 dlv
7 4 dlv
8 8 dlv
dle
2294 2269 dlt
0 -66 dlv
3 -12 dlv
8 -4 dlv
8 0 dlv
dle
27 0 2282 2242 dls
2344 2254 dlt
8 4 dlv
12 11 dlv
0 -82 dlv
dle
2450 2258 dlt
-4 8 dlv
-11 3 dlv
-8 0 dlv
-12 -3 dlv
-8 -12 dlv
-4 -20 dlv
0 -19 dlv
4 -16 dlv
8 -8 dlv
12 -4 dlv
4 0 dlv
11 4 dlv
8 8 dlv
4 12 dlv
0 4 dlv
-4 11 dlv
-8 8 dlv
-11 4 dlv
-4 0 dlv
-12 -4 dlv
-8 -8 dlv
-4 -11 dlv
dle
2421 2773 dlt
-7 -3 dlv
-8 -8 dlv
-4 -8 dlv
-4 -12 dlv
0 -19 dlv
4 -12 dlv
4 -8 dlv
8 -8 dlv
7 -4 dlv
16 0 dlv
8 4 dlv
8 8 dlv
4 8 dlv
4 12 dlv
0 19 dlv
-4 12 dlv
-4 8 dlv
-8 8 dlv
-8 3 dlv
-16 0 dlv
dle
24 -24 2433 2707 dls
0 -55 2124 1882 dls
2124 1866 dlt
12 12 dlv
8 4 dlv
11 0 dlv
8 -4 dlv
4 -12 dlv
0 -39 dlv
dle
2199 1827 dlt
0 82 dlv
27 0 dlv
12 -4 dlv
8 -7 dlv
3 -8 dlv
4 -12 dlv
0 -20 dlv
-4 -11 dlv
-3 -8 dlv
-8 -8 dlv
-12 -4 dlv
-27 0 dlv
dle
2260 1522 dlt
0 -63 dlv
-4 -12 dlv
-4 -3 dlv
-8 -4 dlv
-12 0 dlv
-8 4 dlv
dle
2260 1510 dlt
-8 8 dlv
-8 4 dlv
-12 0 dlv
-8 -4 dlv
-7 -8 dlv
-4 -12 dlv
0 -7 dlv
4 -12 dlv
7 -8 dlv
8 -4 dlv
12 0 dlv
8 4 dlv
8 8 dlv
dle
0 -55 2291 1522 dls
2291 1506 dlt
12 12 dlv
8 4 dlv
11 0 dlv
8 -4 dlv
4 -12 dlv
0 -39 dlv
dle
0 -82 2409 1549 dls
2409 1510 dlt
-8 8 dlv
-8 4 dlv
-12 0 dlv
-8 -4 dlv
-7 -8 dlv
-4 -12 dlv
0 -7 dlv
4 -12 dlv
7 -8 dlv
8 -4 dlv
12 0 dlv
8 4 dlv
8 8 dlv
dle
0 -55 2444 1549 dls
2444 1475 dlt
-4 -4 dlv
4 -4 dlv
4 4 dlv
-4 4 dlv
dle
0 -55 2145 2026 dls
2145 2010 dlt
11 12 dlv
8 4 dlv
12 0 dlv
8 -4 dlv
4 -12 dlv
0 -39 dlv
dle
2215 2002 dlt
47 0 dlv
0 8 dlv
-4 8 dlv
-4 4 dlv
-7 4 dlv
-12 0 dlv
-8 -4 dlv
-8 -8 dlv
-4 -12 dlv
0 -7 dlv
4 -12 dlv
8 -8 dlv
8 -4 dlv
12 0 dlv
7 4 dlv
8 8 dlv
dle
2294 2053 dlt
0 -66 dlv
3 -12 dlv
8 -4 dlv
8 0 dlv
dle
27 0 2282 2026 dls
2344 2038 dlt
8 4 dlv
12 11 dlv
0 -82 dlv
dle
2450 2042 dlt
-4 7 dlv
-11 4 dlv
-8 0 dlv
-12 -4 dlv
-8 -11 dlv
-4 -20 dlv
0 -19 dlv
4 -16 dlv
8 -8 dlv
12 -4 dlv
4 0 dlv
11 4 dlv
8 8 dlv
4 12 dlv
0 4 dlv
-4 11 dlv
-8 8 dlv
-11 4 dlv
-4 0 dlv
-12 -4 dlv
-8 -8 dlv
-4 -11 dlv
dle
1000 1000 1000 slc
1000 1000 1000 sfc
0 -219 525 5691 dls
525 5628 dlt
47 47 dlv
32 16 dlv
47 0 dlv
31 -16 dlv
16 -47 dlv
0 -156 dlv
dle
886 5691 dlt
-32 -16 dlv
-31 -31 dlv
-16 -47 dlv
0 -31 dlv
16 -47 dlv
31 -32 dlv
32 -15 dlv
47 0 dlv
31 15 dlv
31 32 dlv
16 47 dlv
0 31 dlv
-16 47 dlv
-31 31 dlv
-31 16 dlv
-47 0 dlv
dle
1136 5801 dlt
0 -267 dlv
16 -47 dlv
32 -15 dlv
31 0 dlv
dle
110 0 1089 5691 dls
282 0 1309 5613 dls
1716 5472 dlt
0 329 dlv
110 0 dlv
47 -16 dlv
32 -31 dlv
15 -32 dlv
16 -47 dlv
0 -78 dlv
-16 -47 dlv
-15 -31 dlv
-32 -32 dlv
-47 -15 dlv
-110 0 dlv
dle
2296 5472 dlt
0 329 dlv
110 0 dlv
47 -16 dlv
32 -31 dlv
15 -32 dlv
16 -47 dlv
0 -78 dlv
-16 -47 dlv
-15 -31 dlv
-32 -32 dlv
-47 -15 dlv
-110 0 dlv
dle
94 -219 2594 5691 dls
2782 5691 dlt
-94 -219 dlv
-31 -63 dlv
-31 -31 dlv
-32 -16 dlv
-15 0 dlv
dle
0 -219 2876 5691 dls
2876 5628 dlt
48 47 dlv
31 16 dlv
47 0 dlv
31 -16 dlv
16 -47 dlv
0 -156 dlv
dle
0 -219 3347 5691 dls
3347 5644 dlt
-32 31 dlv
-31 16 dlv
-47 0 dlv
-31 -16 dlv
-32 -31 dlv
-15 -47 dlv
0 -31 dlv
15 -47 dlv
32 -32 dlv
31 -15 dlv
47 0 dlv
31 15 dlv
32 32 dlv
dle
0 -219 3472 5691 dls
3472 5628 dlt
47 47 dlv
32 16 dlv
47 0 dlv
31 -16 dlv
16 -47 dlv
0 -156 dlv
dle
3645 5628 dlt
47 47 dlv
31 16 dlv
47 0 dlv
31 -16 dlv
16 -47 dlv
0 -156 dlv
dle
3927 5801 dlt
15 -16 dlv
16 16 dlv
-16 16 dlv
-15 -16 dlv
dle
0 -219 3942 5691 dls
4240 5644 dlt
-31 31 dlv
-31 16 dlv
-47 0 dlv
-32 -16 dlv
-31 -31 dlv
-16 -47 dlv
0 -31 dlv
16 -47 dlv
31 -32 dlv
32 -15 dlv
47 0 dlv
31 15 dlv
31 32 dlv
dle
525 5284 dlt
0 -330 dlv
188 0 dlv
dle
0 -220 964 5174 dls
964 5127 dlt
-31 31 dlv
-32 16 dlv
-47 0 dlv
-31 -16 dlv
-31 -31 dlv
-16 -47 dlv
0 -32 dlv
16 -47 dlv
31 -31 dlv
31 -16 dlv
47 0 dlv
32 16 dlv
31 31 dlv
dle
1105 5284 dlt
0 -267 dlv
16 -47 dlv
31 -16 dlv
32 0 dlv
dle
110 0 1058 5174 dls
1450 5127 dlt
-31 31 dlv
-32 16 dlv
-47 0 dlv
-31 -16 dlv
-31 -31 dlv
-16 -47 dlv
0 -32 dlv
16 -47 dlv
31 -31 dlv
31 -16 dlv
47 0 dlv
32 16 dlv
31 31 dlv
dle
0 -330 1560 5284 dls
1560 5111 dlt
47 47 dlv
31 16 dlv
47 0 dlv
31 -16 dlv
16 -47 dlv
0 -157 dlv
dle
2312 5237 dlt
-31 31 dlv
-47 16 dlv
-63 0 dlv
-47 -16 dlv
-31 -31 dlv
0 -32 dlv
15 -31 dlv
16 -16 dlv
31 -16 dlv
94 -31 dlv
32 -16 dlv
15 -15 dlv
16 -32 dlv
0 -47 dlv
-31 -31 dlv
-47 -16 dlv
-63 0 dlv
-47 16 dlv
-31 31 dlv
dle
2594 5127 dlt
-31 31 dlv
-31 16 dlv
-47 0 dlv
-32 -16 dlv
-31 -31 dlv
-16 -47 dlv
0 -32 dlv
16 -47 dlv
31 -31 dlv
32 -16 dlv
47 0 dlv
31 16 dlv
31 31 dlv
dle
0 -330 2704 5284 dls
2704 5111 dlt
47 47 dlv
31 16 dlv
47 0 dlv
32 -16 dlv
15 -47 dlv
0 -157 dlv
dle
2986 5080 dlt
188 0 dlv
0 31 dlv
-15 31 dlv
-16 16 dlv
-31 16 dlv
-47 0 dlv
-32 -16 dlv
-31 -31 dlv
-16 -47 dlv
0 -32 dlv
16 -47 dlv
31 -31 dlv
32 -16 dlv
47 0 dlv
31 16 dlv
31 31 dlv
dle
0 -220 3284 5174 dls
3284 5111 dlt
47 47 dlv
31 16 dlv
47 0 dlv
32 -16 dlv
15 -47 dlv
0 -157 dlv
dle
3456 5111 dlt
48 47 dlv
31 16 dlv
47 0 dlv
31 -16 dlv
16 -47 dlv
0 -157 dlv
dle
0 -220 3927 5174 dls
3927 5127 dlt
-32 31 dlv
-31 16 dlv
-47 0 dlv
-31 -16 dlv
-32 -31 dlv
-15 -47 dlv
0 -32 dlv
15 -47 dlv
32 -31 dlv
31 -16 dlv
47 0 dlv
31 16 dlv
32 31 dlv
dle
4068 5284 dlt
0 -267 dlv
16 -47 dlv
31 -16 dlv
31 0 dlv
dle
110 0 4021 5174 dls
4225 5284 dlt
15 -16 dlv
16 16 dlv
-16 15 dlv
-15 -15 dlv
dle
0 -220 4240 5174 dls
4538 5127 dlt
-31 31 dlv
-32 16 dlv
-47 0 dlv
-31 -16 dlv
-31 -31 dlv
-16 -47 dlv
0 -32 dlv
16 -47 dlv
31 -31 dlv
31 -16 dlv
47 0 dlv
32 16 dlv
31 31 dlv
dle
0 800 400 slc
0 800 400 sfc
2427 942 dpb
2633 942 dpv
2530 840 dpv
dpu
0 309 2530 942 dls
0 412 2530 4440 dls
514 0 2273 4852 dls
2530 4234 dlt
0 -154 dlv
-154 0 dlv
0 -309 dlv
154 0 dlv
0 -154 dlv
dle
0 309 2324 3771 dls
2273 3926 51 dcu
103 0 2119 3926 dls
2376 4080 dlt
51 -31 dlv
0 62 dlv
-51 -31 dlv
dle
2530 3514 dlt
0 -154 dlv
-154 0 dlv
0 -309 dlv
154 0 dlv
0 -154 dlv
dle
0 309 2324 3051 dls
2273 3206 51 dcu
103 0 2119 3206 dls
2376 3360 dlt
51 -31 dlv
0 62 dlv
-51 -31 dlv
dle
2530 2331 dlt
-51 31 dlv
0 -62 dlv
51 31 dlv
dle
205 0 2119 2485 dls
0 309 2324 2331 dls
2530 2794 dlt
0 -154 dlv
-154 0 dlv
0 -309 dlv
154 0 dlv
0 -154 dlv
dle
2530 1611 dlt
-51 31 dlv
0 -62 dlv
51 31 dlv
dle
205 0 2119 1765 dls
0 309 2324 1611 dls
2530 2074 dlt
0 -154 dlv
-154 0 dlv
0 -309 dlv
154 0 dlv
0 -154 dlv
dle
224 749 1000 slc
224 749 1000 sfc
987 3926 51 dcs
926 0 2530 2897 dls
0 2161 987 1765 dls
1132 0 987 3926 dls
1132 0 987 1765 dls
103 0 2016 2485 dls
103 0 2016 3206 dls
411 0 576 3926 dls
0 206 2530 4234 dls
0 206 2530 1251 dls
0 103 2530 3514 dls
0 103 2530 2794 dls
0 103 2530 2074 dls
1000 0 0 slc
1000 0 0 sfc
3757 2948 dlt
-10 -5 dlv
-9 -9 dlv
-5 -10 dlv
-5 -15 dlv
0 -24 dlv
5 -15 dlv
5 -10 dlv
9 -10 dlv
10 -4 dlv
20 0 dlv
10 4 dlv
9 10 dlv
5 10 dlv
5 15 dlv
0 24 dlv
-5 15 dlv
-5 10 dlv
-9 9 dlv
-10 5 dlv
-20 0 dlv
dle
29 -29 3772 2865 dls
1326 2434 dlt
0 103 dlv
44 0 dlv
14 -5 dlv
5 -5 dlv
5 -10 dlv
0 -10 dlv
-5 -9 dlv
-5 -5 dlv
-14 -5 dlv
-44 0 dlv
dle
34 -54 1360 2488 dls
1492 2537 dlt
-64 0 dlv
0 -103 dlv
64 0 dlv
dle
40 0 1428 2488 dls
1507 2434 dlt
39 103 dlv
39 -103 dlv
dle
49 0 1522 2468 dls
1615 2434 dlt
0 103 dlv
34 0 dlv
15 -5 dlv
9 -10 dlv
5 -10 dlv
5 -14 dlv
0 -25 dlv
-5 -14 dlv
-5 -10 dlv
-9 -10 dlv
-15 -5 dlv
-34 0 dlv
dle
0 -69 1233 3223 dls
1233 3203 dlt
15 15 dlv
9 5 dlv
15 0 dlv
10 -5 dlv
5 -15 dlv
0 -49 dlv
dle
1326 3154 dlt
0 103 dlv
44 0 dlv
15 -5 dlv
5 -5 dlv
5 -10 dlv
0 -9 dlv
-5 -10 dlv
-5 -5 dlv
-15 -5 dlv
-44 0 dlv
dle
35 -54 1360 3208 dls
1493 3257 dlt
-64 0 dlv
0 -103 dlv
64 0 dlv
dle
39 0 1429 3208 dls
1507 3154 dlt
39 103 dlv
40 -103 dlv
dle
49 0 1522 3188 dls
1615 3154 dlt
0 103 dlv
34 0 dlv
15 -5 dlv
10 -10 dlv
5 -10 dlv
5 -14 dlv
0 -25 dlv
-5 -14 dlv
-5 -10 dlv
-10 -10 dlv
-15 -5 dlv
-34 0 dlv
dle
0 -69 81 3943 dls
81 3923 dlt
15 15 dlv
9 5 dlv
15 0 dlv
10 -5 dlv
5 -15 dlv
0 -49 dlv
dle
174 3874 dlt
0 103 dlv
34 0 dlv
15 -5 dlv
10 -10 dlv
5 -9 dlv
4 -15 dlv
0 -25 dlv
-4 -14 dlv
-5 -10 dlv
-10 -10 dlv
-15 -5 dlv
-34 0 dlv
dle
2684 1093 dlt
0 -55 dlv
-3 -10 dlv
-3 -3 dlv
-7 -4 dlv
-11 0 dlv
-6 4 dlv
dle
2684 1083 dlt
-6 7 dlv
-7 3 dlv
-11 0 dlv
-6 -3 dlv
-7 -7 dlv
-4 -10 dlv
0 -7 dlv
4 -10 dlv
7 -7 dlv
6 -4 dlv
11 0 dlv
7 4 dlv
6 7 dlv
dle
0 -48 2712 1093 dls
2712 1080 dlt
10 10 dlv
7 3 dlv
10 0 dlv
7 -3 dlv
4 -10 dlv
0 -35 dlv
dle
0 -72 2815 1117 dls
2815 1083 dlt
-7 7 dlv
-7 3 dlv
-10 0 dlv
-7 -3 dlv
-7 -7 dlv
-3 -10 dlv
0 -7 dlv
3 -10 dlv
7 -7 dlv
7 -4 dlv
10 0 dlv
7 4 dlv
7 7 dlv
dle
2640 4694 dlt
20 -48 dlv
21 48 dlv
dle
0 -72 2739 4718 dls
2739 4683 dlt
-7 7 dlv
-6 4 dlv
-11 0 dlv
-7 -4 dlv
-6 -7 dlv
-4 -10 dlv
0 -7 dlv
4 -10 dlv
6 -7 dlv
7 -3 dlv
11 0 dlv
6 3 dlv
7 7 dlv
dle
0 -72 2804 4718 dls
2804 4683 dlt
-6 7 dlv
-7 4 dlv
-11 0 dlv
-6 -4 dlv
-7 -7 dlv
-4 -10 dlv
0 -7 dlv
4 -10 dlv
7 -7 dlv
6 -3 dlv
11 0 dlv
7 3 dlv
6 7 dlv
dle
1000 0 0 slc
1000 0 0 sfc
3456 2804 dpb
3456 2990 dpv
3569 2990 dpv
3662 2897 dpv
3569 2804 dpv
dps
1810 2393 dpb
1810 2578 dpv
1923 2578 dpv
2016 2485 dpv
1923 2393 dpv
dps
1810 3113 dpb
1810 3298 dpv
1923 3298 dpv
2016 3206 dpv
1923 3113 dpv
dps
370 3833 dpb
370 4018 dpv
483 4018 dpv
576 3926 dpv
483 3833 dpv
dps
2489 1210 2571 1292 dbs
2489 4399 2571 4481 dbs
2489 3576 2571 3658 dbs
2489 4193 2571 4275 dbs
2078 3885 2160 3967 dbs
2489 2856 2571 2938 dbs
2489 3473 2571 3555 dbs
2078 3164 2160 3247 dbs
2489 2753 2571 2835 dbs
2489 2136 2571 2218 dbs
2078 2444 2160 2527 dbs
2489 2033 2571 2115 dbs
2489 1416 2571 1498 dbs
2078 1724 2160 1806 dbs
0 840 4600 5819 clwin
gfs
%%Trailer
%%EOF
